[{"path":"https://genentech.github.io/BayesERtools/articles/basic_workflow_bin.html","id":"data","dir":"Articles","previous_headings":"","what":"Data","title":"1. Basic workflow for ER with binary endpoint","text":"use example simulated dataset included package (d_sim_binom_cov) analysis. document use hypoglycemia (hgly2) example AE. Another example AE diarrhea (dr2), see fairly flat ER curve. also defines variables used analysis.","code":"data(d_sim_binom_cov)  head(d_sim_binom_cov) |>   gt::gt() |>   gt::fmt_number(n_sigfig = 3) d_sim_binom_cov_2 <-   d_sim_binom_cov |>   mutate(     AUCss_1000 = AUCss / 1000, BAGE_10 = BAGE / 10,     BWT_10 = BWT / 10, BHBA1C_5 = BHBA1C / 5,     Dose = paste(Dose_mg, \"mg\")   )  # Grade 2+ hypoglycemia df_er_ae_hgly2 <- d_sim_binom_cov_2 |> filter(AETYPE == \"hgly2\") # Grade 2+ diarrhea df_er_ae_dr2 <- d_sim_binom_cov_2 |> filter(AETYPE == \"dr2\") var_resp <- \"AEFLAG\" # HbA1c & glucose are only relevant for hyperglycemia var_cov_ae_hgly2 <-   c(\"BAGE_10\", \"BWT_10\", \"RACE\", \"VISC\", \"BHBA1C_5\", \"BGLUC\") var_cov_ae_dr2 <-   c(\"BAGE_10\", \"BWT_10\", \"RACE\", \"VISC\")"},{"path":"https://genentech.github.io/BayesERtools/articles/basic_workflow_bin.html","id":"basic-model-development","dir":"Articles","previous_headings":"","what":"1. Basic model development","title":"1. Basic workflow for ER with binary endpoint","text":"dev_ermod_bin() function can used develop basic ER model. (Note function can also used models covariates, already know covariates included.) can compare observed data model fit using plot_er() function.  MCMC samples can obtained as_draws() family functions, as_draws_df(). can predict probability events given exposure level sim_er_new_exp() function. , prediction done AUCss_1000 1, 2, 3 (AUCss 1000, 2000, 3000), output median 95% CI predicted probability. can set output_type = \"draw\" get raw posterior draws.","code":"set.seed(1234) ermod_bin <- dev_ermod_bin(   data = df_er_ae_hgly2,   var_resp = var_resp,   var_exposure = \"AUCss_1000\" ) ermod_bin #>  #> ── Binary ER model ───────────────────────────────────────────────────────────── #> ℹ Use `plot_er()` to visualize ER curve #>  #> ── Developed model ── #>  #> stan_glm #>  family:       binomial [logit] #>  formula:      AEFLAG ~ AUCss_1000 #>  observations: 500 #>  predictors:   2 #> ------ #>             Median MAD_SD #> (Intercept) -2.04   0.23  #> AUCss_1000   0.41   0.08  #> ------ #> * For help interpreting the printed output see ?print.stanreg #> * For info on the priors used see ?prior_summary.stanreg # Using `*` instead of `+` so that scale can be # applied for both panels (main plot and boxplot) plot_er_gof(ermod_bin, var_group = \"Dose\", show_coef_exp = TRUE) *   xgxr::xgx_scale_x_log10() draws_df <- as_draws_df(ermod_bin)  draws_df_summary <-   posterior::summarize_draws(draws_df)  draws_df_summary |>   gt::gt() |>   gt::fmt_number(n_sigfig = 3) ersim_med_qi <- sim_er_new_exp(   ermod_bin,   exposure_to_sim_vec = 1:3,   output_type = \"median_qi\" ) ersim_med_qi #> # A tibble: 3 × 11 #>   AUCss_1000  .row .epred .epred.lower .epred.upper .linpred .linpred.lower #>        <int> <int>  <dbl>        <dbl>        <dbl>    <dbl>          <dbl> #> 1          1     1  0.164        0.122        0.213   -1.63           -1.97 #> 2          2     2  0.228        0.189        0.270   -1.22           -1.46 #> 3          3     3  0.308        0.266        0.354   -0.811          -1.02 #> # ℹ 4 more variables: .linpred.upper <dbl>, .width <dbl>, .point <chr>, #> #   .interval <chr>"},{"path":"https://genentech.github.io/BayesERtools/articles/basic_workflow_bin.html","id":"selection-of-exposure-metrics","dir":"Articles","previous_headings":"","what":"2. Selection of exposure metrics","title":"1. Basic workflow for ER with binary endpoint","text":"dev_ermod_bin_exp_sel() function can used select best exposure metric(s) list candidate exposure metrics. case, AUCss_1000 selected best exposure metric, highest elpd (expected log predictive density).1 ER curve evaluated exposure metrics can generated plot_er_exp_sel() function.","code":"set.seed(1234) ermod_bin_exp_sel <-   dev_ermod_bin_exp_sel(     # Use reduced N to make the example run faster     data = slice_sample(df_er_ae_hgly2, n = 100),     var_resp = var_resp,     var_exp_candidates = c(\"AUCss_1000\", \"Cmaxss\", \"Cminss\"),     # Use reduced iter to make the example run faster     iter = 1000   ) #> ℹ The exposure metric selected was: AUCss_1000 ermod_bin_exp_sel #>  #> ── Binary ER model & exposure metric selection ───────────────────────────────── #> ℹ Use `plot_er_exp_sel()` for ER curve of all exposure metrics #> ℹ Use `plot_er()` with `show_orig_data = TRUE` for ER curve of the selected exposure metric #>  #> ── Exposure metrics comparison ── #>  #>            elpd_diff se_diff #> AUCss_1000  0.00      0.00   #> Cminss     -0.76      0.70   #> Cmaxss     -0.91      0.97   #>  #> ── Selected model ── #>  #> stan_glm #>  family:       binomial [logit] #>  formula:      AEFLAG ~ AUCss_1000 #>  observations: 100 #>  predictors:   2 #> ------ #>             Median MAD_SD #> (Intercept) -1.59   0.45  #> AUCss_1000   0.20   0.15  #> ------ #> * For help interpreting the printed output see ?print.stanreg #> * For info on the priors used see ?prior_summary.stanreg plot_er_exp_sel(ermod_bin_exp_sel) +   xgxr::xgx_scale_x_log10()"},{"path":"https://genentech.github.io/BayesERtools/articles/basic_workflow_bin.html","id":"selection-of-covariates","dir":"Articles","previous_headings":"","what":"3. Selection of covariates","title":"1. Basic workflow for ER with binary endpoint","text":"dev_ermod_bin_cov_sel() function can used select best covariates list candidate covariates. case, HbA1c (BHBA1C_5) glucose (BGLUC) selected, addition exposure metric AUCss_1000 predictors. plot shows AUCss_1000, BHBA1C_5, BGLUC contributes improving model performance, inclusion covariates improves model performance.  cases, might see warning message like . indicates approximation leave-one-cross-validation performance (PSIS-LOO) reliable. Alternatively default cv_method = \"LOO\", can use k-fold cross-validation settingcv_method = \"kfold\" dev_ermod_bin_cov_sel() function. can take longer time run, can reliable cases LOO reliable. can also set validate_search = TRUE let function perform variable selection fold separately, rather using selected variable sequence full dataset evaluation. Added bonus using k-fold cv can visualize often variable selected model. , can see (expected), HbA1c (BHBA1C_5) glucose (BGLUC) highly related almost interchangeably selected second third positions. Note function enforces exposure metric included first model.","code":"set.seed(1234) ermod_bin_cov_sel <-   dev_ermod_bin_cov_sel(     data = df_er_ae_hgly2,     var_resp = var_resp,     var_exposure = \"AUCss_1000\",     var_cov_candidate = var_cov_ae_hgly2,     verbosity_level = 2   ) ermod_bin_cov_sel #>  #> ── Binary ER model & covariate selection ─────────────────────────────────────── #> ℹ Use `plot_submod_performance()` to see variable selection performance #> ℹ Use `plot_er()` with `marginal = TRUE` to visualize marginal ER curve #>  #> ── Selected model ── #>  #> stan_glm #>  family:       binomial [logit] #>  formula:      AEFLAG ~ AUCss_1000 + BHBA1C_5 + BGLUC #>  observations: 500 #>  predictors:   4 #> ------ #>             Median MAD_SD #> (Intercept) -11.00   1.12 #> AUCss_1000    0.49   0.08 #> BHBA1C_5      0.50   0.09 #> BGLUC         0.74   0.13 #> ------ #> * For help interpreting the printed output see ?print.stanreg #> * For info on the priors used see ?prior_summary.stanreg plot_submod_performance(ermod_bin_cov_sel) Warning: In the recalculation of the reference model's PSIS-LOO CV weights for  the performance evaluation, ... Pareto k-values are in the interval...`. set.seed(1234) ermod_bin_cov_sel_kfold <-   dev_ermod_bin_cov_sel(     data = df_er_ae_hgly2,     var_resp = var_resp,     var_exposure = \"AUCss_1000\",     var_cov_candidate = var_cov_ae_hgly2,     cv_method = \"kfold\",     validate_search = TRUE,     verbosity_level = 2   ) ermod_bin_cov_sel_kfold #>  #> ── Binary ER model & covariate selection ─────────────────────────────────────── #> ℹ Use `plot_submod_performance()` to see variable selection performance #> ℹ Use `plot_var_ranking()` to see variable ranking #> ℹ Use `plot_er()` with `marginal = TRUE` to visualize marginal ER curve #>  #> ── Selected model ── #>  #> stan_glm #>  family:       binomial [logit] #>  formula:      AEFLAG ~ AUCss_1000 + BHBA1C_5 + BGLUC #>  observations: 500 #>  predictors:   4 #> ------ #>             Median MAD_SD #> (Intercept) -10.97   1.20 #> AUCss_1000    0.49   0.09 #> BHBA1C_5      0.50   0.09 #> BGLUC         0.73   0.14 #> ------ #> * For help interpreting the printed output see ?print.stanreg #> * For info on the priors used see ?prior_summary.stanreg plot_submod_performance(ermod_bin_cov_sel_kfold) plot_var_ranking(ermod_bin_cov_sel_kfold)"},{"path":"https://genentech.github.io/BayesERtools/articles/basic_workflow_bin.html","id":"marginal-er-prediction","dir":"Articles","previous_headings":"","what":"4. Marginal ER prediction","title":"1. Basic workflow for ER with binary endpoint","text":"can simulate marginal ER relationship, .e. ER relationships “marginalized”, averaged, response population interest, using sim_er_new_exp_marg() function. default, covariate distribution original data, can also supply distribution data_cov argument.","code":"ersim_new_exp_marg_med_qi <- sim_er_new_exp_marg(   ermod_bin_cov_sel,   exposure_to_sim_vec = c(2:6),   output_type = \"median_qi\" ) ersim_new_exp_marg_med_qi #> # A tibble: 5 × 14 #>   .id_exposure AUCss_1000 .epred .epred.lower .epred.upper .linpred #>          <int>      <int>  <dbl>        <dbl>        <dbl>    <dbl> #> 1            1          2  0.226        0.190        0.263  -1.50   #> 2            2          3  0.306        0.266        0.348  -1.01   #> 3            3          4  0.399        0.338        0.457  -0.518  #> 4            4          5  0.496        0.412        0.583  -0.0288 #> 5            5          6  0.595        0.482        0.701   0.470  #> # ℹ 8 more variables: .linpred.lower <dbl>, .linpred.upper <dbl>, #> #   .prediction <dbl>, .prediction.lower <dbl>, .prediction.upper <dbl>, #> #   .width <dbl>, .point <chr>, .interval <chr>  plot_er(ersim_new_exp_marg_med_qi, marginal = TRUE)"},{"path":"https://genentech.github.io/BayesERtools/articles/basic_workflow_bin.html","id":"evaluation-of-covariate-effects","dir":"Articles","previous_headings":"","what":"5. Evaluation of covariate effects","title":"1. Basic workflow for ER with binary endpoint","text":"can visualize effect covariates sim_coveff() plot_coveff() functions. can see three predictors fairly strong effects odds ratio hypoglycemia.","code":"coveffsim <- sim_coveff(ermod_bin_cov_sel) plot_coveff(coveffsim) print_coveff(coveffsim) #> # A tibble: 9 × 5 #>   var_label  value_label value_annot `Odds ratio` `95% CI`         #>   <chr>      <chr>       <chr>       <chr>        <chr>            #> 1 AUCss_1000 0.868       5th         0.514        \"[0.427, 0.613]\" #> 2 AUCss_1000 2.21        median      1            \" \"              #> 3 AUCss_1000 5.30        95th        4.60         \"[3.08, 7.04]\"   #> 4 BHBA1C_5   5.75        5th         0.330        \"[0.237, 0.455]\" #> 5 BHBA1C_5   7.97        median      1            \" \"              #> 6 BHBA1C_5   10.4        95th        3.44         \"[2.41, 4.97]\"   #> 7 BGLUC      4.43        5th         0.293        \"[0.198, 0.420]\" #> 8 BGLUC      6.10        median      1            \" \"              #> 9 BGLUC      7.59        95th        3.00         \"[2.17, 4.25]\""},{"path":"https://genentech.github.io/BayesERtools/articles/overview_of_the_package.html","id":"analysis-workflow-supported-model-types","dir":"Articles","previous_headings":"","what":"0. Analysis workflow & supported model types","title":"0. Overview of the package","text":"Analysis can performed following simple steps.  Supported model types follows:","code":""},{"path":"https://genentech.github.io/BayesERtools/articles/overview_of_the_package.html","id":"er-model-development","dir":"Articles","previous_headings":"","what":"1. ER model development","title":"0. Overview of the package","text":"package provides set functions develop ER models. following functions available: Binary endpoint, linear logistic regression: dev_ermod_bin(), dev_ermod_bin_exp_sel(), dev_ermod_bin_cov_sel() Continuous endpoint, Emax: dev_ermod_emax()","code":""},{"path":"https://genentech.github.io/BayesERtools/articles/overview_of_the_package.html","id":"simulation-from-developed-er-model","dir":"Articles","previous_headings":"","what":"2. Simulation from developed ER model","title":"0. Overview of the package","text":"following functions available simulation developed ER models: sim_er() sim_er_new_exp(), sim_er_curve() sim_er_new_exp_marg(), sim_er_curve_marg()","code":""},{"path":"https://genentech.github.io/BayesERtools/articles/overview_of_the_package.html","id":"plot-simulated-er-curve","dir":"Articles","previous_headings":"","what":"3. Plot simulated ER curve","title":"0. Overview of the package","text":"Simulated ER curve can visualized following functions: plot_er() plot_er_exp_sel()","code":""},{"path":"https://genentech.github.io/BayesERtools/articles/overview_of_the_package.html","id":"acknowledgement","dir":"Articles","previous_headings":"","what":"Acknowledgement","title":"0. Overview of the package","text":"Figure created https://www.biorender.com","code":""},{"path":"https://genentech.github.io/BayesERtools/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Kenta Yoshida. Author, maintainer. François Mercier. Author. Genentech, Inc.. Copyright holder.","code":""},{"path":"https://genentech.github.io/BayesERtools/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Yoshida K, Mercier F (2025). BayesERtools: Bayesian Exposure-Response Analysis Tools. R package version 0.2.0, https://genentech.github.io/BayesERbook/, https://genentech.github.io/BayesERtools/.","code":"@Manual{,   title = {BayesERtools: Bayesian Exposure-Response Analysis Tools},   author = {Kenta Yoshida and François Mercier},   year = {2025},   note = {R package version 0.2.0, https://genentech.github.io/BayesERbook/},   url = {https://genentech.github.io/BayesERtools/}, }"},{"path":"https://genentech.github.io/BayesERtools/index.html","id":"bayesertools-","dir":"","previous_headings":"","what":"Bayesian Exposure-Response Analysis Tools","title":"Bayesian Exposure-Response Analysis Tools","text":"BayesERtools provides suite tools facilitate exposure-response analysis using Bayesian methods. Tutorial (BayesERbook): https://genentech.github.io/BayesERbook/ Package documentation: https://genentech.github.io/BayesERtools/ GitHub repo package: https://github.com/genentech/BayesERtools/","code":""},{"path":"https://genentech.github.io/BayesERtools/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Bayesian Exposure-Response Analysis Tools","text":"can install BayesERtools : also need latest version rstanemax (>= 0.1.7) use Emax model.","code":"# install.packages('BayesERtools') # Once on CRAN devtools::install_github(\"genentech/BayesERtools\") # development version install.packages('rstanemax', repos = c(ppm = 'https://packagemanager.posit.co/cran/latest'))"},{"path":[]},{"path":"https://genentech.github.io/BayesERtools/index.html","id":"quick-guide","dir":"","previous_headings":"","what":"Quick guide","title":"Bayesian Exposure-Response Analysis Tools","text":"quick demo use package E-R analysis. See vignette(\"basic_workflow_bin\") thorough walk basic workflow.","code":"# Load package and data library(dplyr) library(BayesERtools) ggplot2::theme_set(ggplot2::theme_bw(base_size = 12))  data(d_sim_binom_cov)  # Hyperglycemia Grade 2+ (hgly2) data df_er_ae_hgly2 <-   d_sim_binom_cov |>   filter(AETYPE == \"hgly2\") |>   # Re-scale AUCss, baseline age   mutate(     AUCss_1000 = AUCss / 1000, BAGE_10 = BAGE / 10,     Dose = paste(Dose_mg, \"mg\")   )  var_resp <- \"AEFLAG\""},{"path":"https://genentech.github.io/BayesERtools/index.html","id":"simple-univariable-model-for-binary-endpoint","dir":"","previous_headings":"Quick guide","what":"Simple univariable model for binary endpoint","title":"Bayesian Exposure-Response Analysis Tools","text":"","code":"set.seed(1234) ermod_bin <- dev_ermod_bin(   data = df_er_ae_hgly2,   var_resp = var_resp,   var_exposure = \"AUCss_1000\" ) ermod_bin #>  #> ── Binary ER model ───────────────────────────────────────────────────────────── #> ℹ Use `plot_er()` to visualize ER curve #>  #> ── Developed model ── #>  #> stan_glm #>  family:       binomial [logit] #>  formula:      AEFLAG ~ AUCss_1000 #>  observations: 500 #>  predictors:   2 #> ------ #>             Median MAD_SD #> (Intercept) -2.04   0.23  #> AUCss_1000   0.41   0.08  #> ------ #> * For help interpreting the printed output see ?print.stanreg #> * For info on the priors used see ?prior_summary.stanreg  # Using `*` instead of `+` so that scale can be # applied for both panels (main plot and boxplot) plot_er_gof(ermod_bin, var_group = \"Dose\", show_coef_exp = TRUE) *   xgxr::xgx_scale_x_log10()"},{"path":"https://genentech.github.io/BayesERtools/index.html","id":"covariate-selection","dir":"","previous_headings":"Quick guide","what":"Covariate selection","title":"Bayesian Exposure-Response Analysis Tools","text":"BGLUC (baseline glucose) selected two covariates .","code":"set.seed(1234) ermod_bin_cov_sel <-   dev_ermod_bin_cov_sel(     data = df_er_ae_hgly2,     var_resp = var_resp,     var_exposure = \"AUCss_1000\",     var_cov_candidate = c(\"BAGE_10\", \"RACE\", \"BGLUC\")   ) #>  #> ── Step 1: Full reference model fit ── #>  #> ── Step 2: Variable selection ── #>  #> ℹ The variables selected were: AUCss_1000, BGLUC #>  #> ── Step 3: Final model fit ── #>  #> ── Cov mod dev complete ── #>  ermod_bin_cov_sel #> ── Binary ER model & covariate selection ─────────────────────────────────────── #> ℹ Use `plot_submod_performance()` to see variable selection performance #> ℹ Use `plot_er()` with `marginal = TRUE` to visualize marginal ER curve #>  #> ── Selected model ── #>  #> stan_glm #>  family:       binomial [logit] #>  formula:      AEFLAG ~ AUCss_1000 + BGLUC #>  observations: 500 #>  predictors:   3 #> ------ #>             Median MAD_SD #> (Intercept) -7.59   0.90  #> AUCss_1000   0.46   0.08  #> BGLUC        0.87   0.13  #> ------ #> * For help interpreting the printed output see ?print.stanreg #> * For info on the priors used see ?prior_summary.stanreg plot_submod_performance(ermod_bin_cov_sel) coveffsim <- sim_coveff(ermod_bin_cov_sel) plot_coveff(coveffsim)"},{"path":"https://genentech.github.io/BayesERtools/reference/BayesERtools-package.html","id":null,"dir":"Reference","previous_headings":"","what":"BayesERtools: Bayesian Exposure-Response Analysis Tools — BayesERtools-package","title":"BayesERtools: Bayesian Exposure-Response Analysis Tools — BayesERtools-package","text":"Suite tools facilitate exposure-response analysis using Bayesian methods. package provides streamlined workflow fitting types models commonly used exposure-response analysis - linear Emax continuous endpoints, logistic linear logistic Emax binary endpoints, well performing simulation visualization. Learn workflow https://genentech.github.io/BayesERbook/.","code":""},{"path":[]},{"path":"https://genentech.github.io/BayesERtools/reference/BayesERtools-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"BayesERtools: Bayesian Exposure-Response Analysis Tools — BayesERtools-package","text":"Maintainer: Kenta Yoshida yoshida.kenta.6@gmail.com (ORCID) Authors: François Mercier francois.mercier@roche.com (ORCID) contributors: Genentech, Inc. [copyright holder]","code":""},{"path":"https://genentech.github.io/BayesERtools/reference/as_draws.html","id":null,"dir":"Reference","previous_headings":"","what":"Transform to draws objects — as_draws","title":"Transform to draws objects — as_draws","text":"See posterior::as_draws() details.","code":""},{"path":"https://genentech.github.io/BayesERtools/reference/as_draws.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transform to draws objects — as_draws","text":"","code":"as_draws(x, ...)  as_draws_list(x, ...)  as_draws_array(x, ...)  as_draws_df(x, ...)  as_draws_matrix(x, ...)  as_draws_rvars(x, ...)  # S3 method for class 'ermod' as_draws(x, ...)  # S3 method for class 'ermod' as_draws_list(x, ...)  # S3 method for class 'ermod' as_draws_array(x, ...)  # S3 method for class 'ermod' as_draws_df(x, ...)  # S3 method for class 'ermod' as_draws_matrix(x, ...)  # S3 method for class 'ermod' as_draws_rvars(x, ...)"},{"path":"https://genentech.github.io/BayesERtools/reference/as_draws.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transform to draws objects — as_draws","text":"x object class ermod ... Arguments passed individual methods (applicable).","code":""},{"path":"https://genentech.github.io/BayesERtools/reference/as_draws.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transform to draws objects — as_draws","text":"draws object posterior package.","code":""},{"path":"https://genentech.github.io/BayesERtools/reference/build_spec_coveff.html","id":null,"dir":"Reference","previous_headings":"","what":"Build specifications for covariate effect simulation/visualization — build_spec_coveff","title":"Build specifications for covariate effect simulation/visualization — build_spec_coveff","text":"Build specifications covariate effect simulation/visualization","code":""},{"path":"https://genentech.github.io/BayesERtools/reference/build_spec_coveff.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Build specifications for covariate effect simulation/visualization — build_spec_coveff","text":"","code":"build_spec_coveff(   ermod,   data = NULL,   qi_width_cov = 0.9,   n_sigfig = 3,   use_seps = TRUE,   drop_trailing_dec_mark = TRUE )"},{"path":"https://genentech.github.io/BayesERtools/reference/build_spec_coveff.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Build specifications for covariate effect simulation/visualization — build_spec_coveff","text":"ermod object class ermod data optional data frame derive covariate values forest plots. NULL (default), data used fit model used. qi_width_cov width quantile interval continuous covariates forest plot. Default 0.9 (.e. visualize effect covariate effect 5th 95th percentile values). n_sigfig Number significant figures form value_label continuous variables. See gt::vec_fmt_number() details. use_seps Whether use separators thousands printing numbers. See gt::vec_fmt_number() details. drop_trailing_dec_mark Whether drop trailing decimal mark (\".\") value_label continuous variables. See gt::vec_fmt_number() details.","code":""},{"path":"https://genentech.github.io/BayesERtools/reference/build_spec_coveff.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Build specifications for covariate effect simulation/visualization — build_spec_coveff","text":"spec_coveff (return object) data frame specification covariate effects visualized. internally generated build_spec_coveff() run sim_coveff() plot_coveff() directly. Alternatively, can develop modify one generated build_spec_coveff() supply sim_coveff() plot_coveff(). data frame following columns (probably easier try build_spec_coveff() see structure): var_order: order covariate forest plot. exposure variable always first one covariates ordered order supplied var_cov argument dev_ermod_* function. used model dev_ermod_bin_cov_sel(), order determined variable selection process. var_name: name variable. var_label: label variable used plot. var_name default. value_order: order value variable evaluated. value_annot: annotation value variable evaluated. appears right hand side forest plot. value_label: label value variable evaluated. value_cont: value continuous variables. value_cat: value categorical variables. is_ref_value: Whether value reference value. show_ref_value: Whether show reference value plot table. TRUE default is_ref_value == TRUE, otherwise NA (ignored). is_covariate: Whether variable covariate (TRUE) exposure variable (FALSE).","code":""},{"path":"https://genentech.github.io/BayesERtools/reference/build_spec_coveff.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Build specifications for covariate effect simulation/visualization — build_spec_coveff","text":"","code":"# \\donttest{ data(d_sim_binom_cov_hgly2)  ermod_bin <- dev_ermod_bin(   data = d_sim_binom_cov_hgly2,   var_resp = \"AEFLAG\",   var_exposure = \"AUCss_1000\",   var_cov = c(\"BHBA1C_5\", \"RACE\"), )  spec_coveff <- build_spec_coveff(ermod_bin) plot_coveff(ermod_bin, spec_coveff = spec_coveff)  # }"},{"path":"https://genentech.github.io/BayesERtools/reference/calc_ersim_med_qi.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate median and quantile intervals from ersim object — calc_ersim_med_qi","title":"Calculate median and quantile intervals from ersim object — calc_ersim_med_qi","text":"useful performed simulation output_type = \"draws\" want calculate median quantile intervals without re-simulating.","code":""},{"path":"https://genentech.github.io/BayesERtools/reference/calc_ersim_med_qi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate median and quantile intervals from ersim object — calc_ersim_med_qi","text":"","code":"calc_ersim_med_qi(x, qi_width = 0.95)"},{"path":"https://genentech.github.io/BayesERtools/reference/calc_ersim_med_qi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate median and quantile intervals from ersim object — calc_ersim_med_qi","text":"x object class ersim ersim_marg qi_width Width quantile interval","code":""},{"path":"https://genentech.github.io/BayesERtools/reference/calc_ersim_med_qi.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate median and quantile intervals from ersim object — calc_ersim_med_qi","text":"object class ersim_med_qi ersim_marg_med_qi","code":""},{"path":"https://genentech.github.io/BayesERtools/reference/d_sim_binom_cov.html","id":null,"dir":"Reference","previous_headings":"","what":"Sample simulated data for exposure-response with binary endpoint. — d_sim_binom_cov","title":"Sample simulated data for exposure-response with binary endpoint. — d_sim_binom_cov","text":"Sample simulated data exposure-response binary endpoint.","code":""},{"path":"https://genentech.github.io/BayesERtools/reference/d_sim_binom_cov.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sample simulated data for exposure-response with binary endpoint. — d_sim_binom_cov","text":"","code":"d_sim_binom_cov  d_sim_binom_cov_hgly2"},{"path":"https://genentech.github.io/BayesERtools/reference/d_sim_binom_cov.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Sample simulated data for exposure-response with binary endpoint. — d_sim_binom_cov","text":"data frame columns: ID Subject ID AETYPE Adverse event type: hgly2 (Gr2+ hyperglycemia), dr2 (Gr2+ Diarrhea), ae_covsel_test (hypothetical AE covariate selection function test) AEFLAG Adverse event flag: 0 - event, 1 - event Dose_mg Dose mg: 200, 400 AUCss Steady-state area curve Cmaxss Steady-state maximum (peak) concentration Cminss Steady-state minimum (trough) concentration BAGE Baseline age years BWT Baseline weight kg BGLUC Baseline glucose mmol/L BHBA1C Baseline HbA1c percentage RACE Race: White, Black, Asian VISC Visceral disease: , Yes AUCss_1000 AUCss/1000 BAGE_10 BAGE/10 BWT_10 BWT/10 BHBA1C_5 BHBA1C/5 object class tbl_df (inherits tbl, data.frame) 500 rows 17 columns.","code":""},{"path":"https://genentech.github.io/BayesERtools/reference/d_sim_binom_cov.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Sample simulated data for exposure-response with binary endpoint. — d_sim_binom_cov","text":"simulated dataset loosely inspired ER analysis ipatasertib Kotani (2022) : https://doi.org/10.1007/s00280-022-04488-2 can find data generating code package source code, data-raw/d_sim_binom_cov.R. d_sim_binom_cov_hgly2 subset dataset hgly2 AE type columns added testing.","code":""},{"path":"https://genentech.github.io/BayesERtools/reference/d_sim_binom_cov.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sample simulated data for exposure-response with binary endpoint. — d_sim_binom_cov","text":"","code":"d_sim_binom_cov #> # A tibble: 1,500 × 13 #>       ID AETYPE      AEFLAG Dose_mg AUCss Cmaxss Cminss  BAGE   BWT BGLUC BHBA1C #>    <int> <chr>        <int>   <dbl> <dbl>  <dbl>  <dbl> <dbl> <dbl> <dbl>  <dbl> #>  1     1 hgly2            0     200  866.   64.3   10.1  84.4  74.1  4.65   31.5 #>  2     1 dr2              0     200  866.   64.3   10.1  84.4  74.1  4.65   31.5 #>  3     1 ae_covsel_…      0     200  866.   64.3   10.1  84.4  74.1  4.65   31.5 #>  4     2 hgly2            0     200 1707.  166.    27.3  59.1  88.2  7.24   41.9 #>  5     2 dr2              0     200 1707.  166.    27.3  59.1  88.2  7.24   41.9 #>  6     2 ae_covsel_…      1     200 1707.  166.    27.3  59.1  88.2  7.24   41.9 #>  7     3 hgly2            0     200  746.   68.2   15.8  64.3  88.0  5.73   47.7 #>  8     3 dr2              0     200  746.   68.2   15.8  64.3  88.0  5.73   47.7 #>  9     3 ae_covsel_…      0     200  746.   68.2   15.8  64.3  88.0  5.73   47.7 #> 10     4 hgly2            0     200 1984.  287.    37.2  65.5 114.   5.26   23.4 #> # ℹ 1,490 more rows #> # ℹ 2 more variables: RACE <chr>, VISC <chr> d_sim_binom_cov_hgly2 #> # A tibble: 500 × 17 #>       ID AETYPE AEFLAG Dose_mg AUCss Cmaxss Cminss  BAGE   BWT BGLUC BHBA1C #>    <int> <chr>   <int>   <dbl> <dbl>  <dbl>  <dbl> <dbl> <dbl> <dbl>  <dbl> #>  1     1 hgly2       0     200  866.   64.3   10.1  84.4  74.1  4.65   31.5 #>  2     2 hgly2       0     200 1707.  166.    27.3  59.1  88.2  7.24   41.9 #>  3     3 hgly2       0     200  746.   68.2   15.8  64.3  88.0  5.73   47.7 #>  4     4 hgly2       0     200 1984.  287.    37.2  65.5 114.   5.26   23.4 #>  5     5 hgly2       0     200 2045.  275.    53.1  67.5  64.6  4.49   43.1 #>  6     6 hgly2       0     200  632.   47.3   12.0  67.0  73.0  6.41   43.6 #>  7     7 hgly2       0     200 2274.  136.    33.6  73.7  63.6  7.22   35.9 #>  8     8 hgly2       0     200 1347.  130.    21.7  59.9  99.7  5.34   36.2 #>  9     9 hgly2       0     200 1101.   60.7   11.2  65.8  82.3  5.47   36.0 #> 10    10 hgly2       0     200 1822.  179.    49.3  65.5  62.3  5.70   33.7 #> # ℹ 490 more rows #> # ℹ 6 more variables: RACE <chr>, VISC <fct>, AUCss_1000 <dbl>, BAGE_10 <dbl>, #> #   BWT_10 <dbl>, BHBA1C_5 <dbl>"},{"path":"https://genentech.github.io/BayesERtools/reference/d_sim_lin.html","id":null,"dir":"Reference","previous_headings":"","what":"Sample simulated data for exposure-response with continuous endpoint using linear model. — d_sim_lin","title":"Sample simulated data for exposure-response with continuous endpoint using linear model. — d_sim_lin","text":"Sample simulated data exposure-response continuous endpoint using linear model.","code":""},{"path":"https://genentech.github.io/BayesERtools/reference/d_sim_lin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sample simulated data for exposure-response with continuous endpoint using linear model. — d_sim_lin","text":"","code":"d_sim_lin"},{"path":"https://genentech.github.io/BayesERtools/reference/d_sim_lin.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Sample simulated data for exposure-response with continuous endpoint using linear model. — d_sim_lin","text":"data frame columns: ID Subject ID AUCss Steady-state area curve Cmaxss Steady-state maximum (peak) concentration BAGE Baseline age years SEX M F response Response","code":""},{"path":"https://genentech.github.io/BayesERtools/reference/d_sim_lin.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Sample simulated data for exposure-response with continuous endpoint using linear model. — d_sim_lin","text":"True model defined 0.5 * AUCss + 0.5 * BAGE + 5 * SEX, variability added standard deviation 10. can find data generating code package source code, data-raw/d_sim_lin.R.","code":""},{"path":"https://genentech.github.io/BayesERtools/reference/d_sim_lin.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sample simulated data for exposure-response with continuous endpoint using linear model. — d_sim_lin","text":"","code":"d_sim_lin #> # A tibble: 101 × 6 #>       ID AUCss Cmaxss  BAGE SEX   response #>    <int> <int>  <dbl> <dbl> <chr>    <dbl> #>  1     1     0   0     45.3 F         37.8 #>  2     2     1   5.42  50.7 M         35.4 #>  3     3     2  13.3   45.0 F         36.7 #>  4     4     3   4.44  41.7 M         38.6 #>  5     5     4  22.6   51.7 F         35.2 #>  6     6     5  28.8   41.0 M         30.9 #>  7     7     6  24.8   51.7 F         20.3 #>  8     8     7  29.3   53.5 F         30.9 #>  9     9     8  33.2   49.5 F         26.9 #> 10    10     9  33.0   48.0 M         42.9 #> # ℹ 91 more rows"},{"path":"https://genentech.github.io/BayesERtools/reference/dev_ermod_bin.html","id":null,"dir":"Reference","previous_headings":"","what":"Develop linear ER model for binary or continuous endpoint — dev_ermod_bin","title":"Develop linear ER model for binary or continuous endpoint — dev_ermod_bin","text":"functions used develop linear ER model binary (dev_ermod_bin()) continuous (dev_ermod_lin()) endpoint. can also specify covariates included model.","code":""},{"path":"https://genentech.github.io/BayesERtools/reference/dev_ermod_bin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Develop linear ER model for binary or continuous endpoint — dev_ermod_bin","text":"","code":"dev_ermod_bin(   data,   var_resp,   var_exposure,   var_cov = NULL,   verbosity_level = 1,   chains = 4,   iter = 2000 )  dev_ermod_lin(   data,   var_resp,   var_exposure,   var_cov = NULL,   verbosity_level = 1,   chains = 4,   iter = 2000 )"},{"path":"https://genentech.github.io/BayesERtools/reference/dev_ermod_bin.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Develop linear ER model for binary or continuous endpoint — dev_ermod_bin","text":"data Input data E-R analysis var_resp Response variable name character var_exposure Exposure variable names character var_cov Covariate variable names character vector verbosity_level Verbosity level. 0: output, 1: Display steps, 2: Display progress step, 3: Display MCMC sampling. chains Number chains Stan. iter Number iterations Stan.","code":""},{"path":"https://genentech.github.io/BayesERtools/reference/dev_ermod_bin.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Develop linear ER model for binary or continuous endpoint — dev_ermod_bin","text":"object class ermod_bin ermod_lin.","code":""},{"path":"https://genentech.github.io/BayesERtools/reference/dev_ermod_bin.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Develop linear ER model for binary or continuous endpoint — dev_ermod_bin","text":"","code":"data(d_sim_binom_cov_hgly2)  ermod_bin <- dev_ermod_bin(   data = d_sim_binom_cov_hgly2,   var_resp = \"AEFLAG\",   var_exposure = \"AUCss_1000\",   var_cov = \"BHBA1C_5\", )  ermod_bin #>  #> ── Binary ER model ───────────────────────────────────────────────────────────── #> ℹ Use `plot_er()` to visualize ER curve #>  #> ── Developed model ── #>  #> stan_glm #>  family:       binomial [logit] #>  formula:      AEFLAG ~ AUCss_1000 + BHBA1C_5 #>  observations: 500 #>  predictors:   3 #> ------ #>             Median MAD_SD #> (Intercept) -6.94   0.77  #> AUCss_1000   0.45   0.08  #> BHBA1C_5     0.58   0.08  #> ------ #> * For help interpreting the printed output see ?print.stanreg #> * For info on the priors used see ?prior_summary.stanreg  data(d_sim_lin)  ermod_lin <- dev_ermod_lin(   data = d_sim_lin,   var_resp = \"response\",   var_exposure = \"AUCss\",   var_cov = c(\"SEX\", \"BAGE\") )  ermod_lin #>  #> ── Linear ER model ───────────────────────────────────────────────────────────── #> ℹ Use `plot_er()` to visualize ER curve #>  #> ── Developed model ── #>  #> stan_glm #>  family:       gaussian [identity] #>  formula:      response ~ AUCss + SEX + BAGE #>  observations: 101 #>  predictors:   4 #> ------ #>             Median MAD_SD #> (Intercept)  8.49   5.57  #> AUCss        0.46   0.03  #> SEXM        -4.10   2.12  #> BAGE         0.50   0.10  #> Auxiliary parameter(s): #>       Median MAD_SD #> sigma 10.49   0.75  #> ------ #> * For help interpreting the printed output see ?print.stanreg #> * For info on the priors used see ?prior_summary.stanreg"},{"path":"https://genentech.github.io/BayesERtools/reference/dev_ermod_bin_cov_functions.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal functions for developing an ER model with covariates for binary endpoint — dev_ermod_bin_cov_functions","title":"Internal functions for developing an ER model with covariates for binary endpoint — dev_ermod_bin_cov_functions","text":"functions intended used directly users.","code":""},{"path":"https://genentech.github.io/BayesERtools/reference/dev_ermod_bin_cov_functions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal functions for developing an ER model with covariates for binary endpoint — dev_ermod_bin_cov_functions","text":"","code":".dev_ermod_refmodel(   data,   var_resp,   var_exposure,   var_cov_candidates,   verbosity_level = 1,   chains = 4,   iter = 2000,   fun_family = quote(stats::binomial()) )  .select_cov_projpred(   refm_obj,   var_exposure,   var_cov_candidates,   nterms_max = NULL,   cv_method = c(\"LOO\", \"kfold\"),   k = 5,   .reduce_obj_size = TRUE,   validate_search = FALSE,   verbosity_level = 1 )"},{"path":"https://genentech.github.io/BayesERtools/reference/dev_ermod_bin_cov_functions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Internal functions for developing an ER model with covariates for binary endpoint — dev_ermod_bin_cov_functions","text":"data Input data E-R analysis var_resp Response variable name character var_exposure Exposure variable names character var_cov_candidates Candidate covariate names character vector verbosity_level Verbosity level. 0: output, 1: Display steps, 2: Display progress step, 3: Display MCMC sampling. chains Number chains Stan. iter Number iterations Stan. fun_family Family function model. Default binomial. refm_obj Reference model object used variable selection nterms_max Maximum number terms consider model. Default NULL (terms considered). cv_method Cross-validation method. Default \"LOO\" (recommended). Use \"kfold\" see warnings Pareto k estimates. k Number folds kfold CV. used cv_method \"kfold\". .reduce_obj_size Whether reduce object size removing elements projpred outputs necessary functionality package. validate_search Whether validate search. Default FALSE. Recommend set TRUE kfold CV. use LOO (run time become long).","code":""},{"path":"https://genentech.github.io/BayesERtools/reference/dev_ermod_bin_cov_functions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Internal functions for developing an ER model with covariates for binary endpoint — dev_ermod_bin_cov_functions","text":".dev_ermod_refmodel(): reference model object can used variable selection. .select_cov_projpred(): selected variables","code":""},{"path":"https://genentech.github.io/BayesERtools/reference/dev_ermod_bin_cov_functions.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Internal functions for developing an ER model with covariates for binary endpoint — dev_ermod_bin_cov_functions","text":".dev_ermod_refmodel() used fit refmodel (full reference model) necessary projpred .select_cov_projpred() used select variables projpred package","code":""},{"path":"https://genentech.github.io/BayesERtools/reference/dev_ermod_bin_cov_sel.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform covariate selection for linear ER model — dev_ermod_bin_cov_sel","title":"Perform covariate selection for linear ER model — dev_ermod_bin_cov_sel","text":"functions used develop ER model covariates binary continuous endpoints. projpred package used variable selection.","code":""},{"path":"https://genentech.github.io/BayesERtools/reference/dev_ermod_bin_cov_sel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform covariate selection for linear ER model — dev_ermod_bin_cov_sel","text":"","code":"dev_ermod_bin_cov_sel(   data,   var_resp,   var_exposure,   var_cov_candidates,   cv_method = c(\"LOO\", \"kfold\"),   k = 5,   validate_search = FALSE,   nterms_max = NULL,   .reduce_obj_size = TRUE,   verbosity_level = 1,   chains = 4,   iter = 2000 )  dev_ermod_lin_cov_sel(   data,   var_resp,   var_exposure,   var_cov_candidates,   cv_method = c(\"LOO\", \"kfold\"),   k = 5,   validate_search = FALSE,   nterms_max = NULL,   .reduce_obj_size = TRUE,   verbosity_level = 1,   chains = 4,   iter = 2000 )"},{"path":"https://genentech.github.io/BayesERtools/reference/dev_ermod_bin_cov_sel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform covariate selection for linear ER model — dev_ermod_bin_cov_sel","text":"data Input data E-R analysis var_resp Response variable name character var_exposure Exposure variable names character var_cov_candidates Candidate covariate names character vector cv_method Cross-validation method. Default \"LOO\" (recommended). Use \"kfold\" see warnings Pareto k estimates. k Number folds kfold CV. used cv_method \"kfold\". validate_search Whether validate search. Default FALSE. Recommend set TRUE kfold CV. use LOO (run time become long). nterms_max Maximum number terms consider model. Default NULL (terms considered). .reduce_obj_size Whether reduce object size removing elements projpred outputs necessary functionality package. verbosity_level Verbosity level. 0: output, 1: Display steps, 2: Display progress step, 3: Display MCMC sampling. chains Number chains Stan. iter Number iterations Stan.","code":""},{"path":"https://genentech.github.io/BayesERtools/reference/dev_ermod_bin_cov_sel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform covariate selection for linear ER model — dev_ermod_bin_cov_sel","text":"object class ermod_bin_cov_sel ermod_lin_cov_sel.","code":""},{"path":"https://genentech.github.io/BayesERtools/reference/dev_ermod_bin_cov_sel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform covariate selection for linear ER model — dev_ermod_bin_cov_sel","text":"","code":"# \\donttest{ data(d_sim_binom_cov_hgly2)  er_binary_cov_model <- dev_ermod_bin_cov_sel(   data = d_sim_binom_cov_hgly2,   var_resp = \"AEFLAG\",   var_exposure = \"AUCss_1000\",   var_cov_candidates = c(     \"BAGE_10\", \"BWT_10\", \"BGLUC\",     \"BHBA1C_5\", \"RACE\", \"VISC\"   ) ) #>  #> ── Step 1: Full reference model fit ── #>  #> ── Step 2: Variable selection ── #>  #> ℹ The variables selected were: AUCss_1000, BHBA1C_5, BGLUC #>  #> ── Step 3: Final model fit ── #>  #> ── Cov mod dev complete ── #>   er_binary_cov_model #> ── Binary ER model & covariate selection ─────────────────────────────────────── #> ℹ Use `plot_submod_performance()` to see variable selection performance #> ℹ Use `plot_er()` with `marginal = TRUE` to visualize marginal ER curve #>  #> ── Selected model ── #>  #> stan_glm #>  family:       binomial [logit] #>  formula:      AEFLAG ~ AUCss_1000 + BHBA1C_5 + BGLUC #>  observations: 500 #>  predictors:   4 #> ------ #>             Median MAD_SD #> (Intercept) -10.95   1.18 #> AUCss_1000    0.50   0.09 #> BHBA1C_5      0.50   0.09 #> BGLUC         0.74   0.14 #> ------ #> * For help interpreting the printed output see ?print.stanreg #> * For info on the priors used see ?prior_summary.stanreg # }  # \\donttest{ data(d_sim_lin)  ermod_lin_cov_sel <- dev_ermod_lin_cov_sel(   data = d_sim_lin,   var_resp = \"response\",   var_exposure = \"AUCss\",   var_cov_candidates = c(\"BAGE\", \"SEX\") ) #>  #> ── Step 1: Full reference model fit ── #>  #> ── Step 2: Variable selection ── #>  #> ℹ The variables selected were: AUCss, BAGE #>  #> ── Step 3: Final model fit ── #>  #> ── Cov mod dev complete ── #>   ermod_lin_cov_sel #> ── Linear ER model & covariate selection ─────────────────────────────────────── #> ℹ Use `plot_submod_performance()` to see variable selection performance #> ℹ Use `plot_er()` with `marginal = TRUE` to visualize marginal ER curve #>  #> ── Selected model ── #>  #> stan_glm #>  family:       gaussian [identity] #>  formula:      response ~ AUCss + BAGE #>  observations: 101 #>  predictors:   3 #> ------ #>             Median MAD_SD #> (Intercept) 6.74   5.62   #> AUCss       0.46   0.04   #> BAGE        0.50   0.11   #> Auxiliary parameter(s): #>       Median MAD_SD #> sigma 10.66   0.79  #> ------ #> * For help interpreting the printed output see ?print.stanreg #> * For info on the priors used see ?prior_summary.stanreg # }"},{"path":"https://genentech.github.io/BayesERtools/reference/dev_ermod_bin_exp_sel.html","id":null,"dir":"Reference","previous_headings":"","what":"Exposure metrics selection for linear ER models — dev_ermod_bin_exp_sel","title":"Exposure metrics selection for linear ER models — dev_ermod_bin_exp_sel","text":"functions used develop linear ER model binary continuous endpoint, using various exposure metrics selecting best one.","code":""},{"path":"https://genentech.github.io/BayesERtools/reference/dev_ermod_bin_exp_sel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Exposure metrics selection for linear ER models — dev_ermod_bin_exp_sel","text":"","code":"dev_ermod_bin_exp_sel(   data,   var_resp,   var_exp_candidates,   verbosity_level = 1,   chains = 4,   iter = 2000 )  dev_ermod_lin_exp_sel(   data,   var_resp,   var_exp_candidates,   verbosity_level = 1,   chains = 4,   iter = 2000 )"},{"path":"https://genentech.github.io/BayesERtools/reference/dev_ermod_bin_exp_sel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Exposure metrics selection for linear ER models — dev_ermod_bin_exp_sel","text":"data Input data E-R analysis var_resp Response variable name character var_exp_candidates Candidate exposure variable names character vector verbosity_level Verbosity level. 0: output, 1: Display steps, 2: Display progress step, 3: Display MCMC sampling. chains Number chains Stan. iter Number iterations Stan.","code":""},{"path":"https://genentech.github.io/BayesERtools/reference/dev_ermod_bin_exp_sel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Exposure metrics selection for linear ER models — dev_ermod_bin_exp_sel","text":"object class ermod_bin_exp_sel.ermod_lin_exp_sel","code":""},{"path":"https://genentech.github.io/BayesERtools/reference/dev_ermod_bin_exp_sel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Exposure metrics selection for linear ER models — dev_ermod_bin_exp_sel","text":"","code":"# \\donttest{ data(d_sim_binom_cov_hgly2)  ermod_bin_exp_sel <-   dev_ermod_bin_exp_sel(     data = d_sim_binom_cov_hgly2,     var_resp = \"AEFLAG\",     var_exp_candidates = c(\"AUCss_1000\", \"Cmaxss\", \"Cminss\")   ) #> ℹ The exposure metric selected was: AUCss_1000  ermod_bin_exp_sel #>  #> ── Binary ER model & exposure metric selection ───────────────────────────────── #> ℹ Use `plot_er_exp_sel()` for ER curve of all exposure metrics #> ℹ Use `plot_er()` with `show_orig_data = TRUE` for ER curve of the selected exposure metric #>  #> ── Exposure metrics comparison ── #>  #>            elpd_diff se_diff #> AUCss_1000  0.00      0.00   #> Cminss     -4.51      3.10   #> Cmaxss     -5.04      2.85   #>  #> ── Selected model ── #>  #> stan_glm #>  family:       binomial [logit] #>  formula:      AEFLAG ~ AUCss_1000 #>  observations: 500 #>  predictors:   2 #> ------ #>             Median MAD_SD #> (Intercept) -2.04   0.22  #> AUCss_1000   0.41   0.07  #> ------ #> * For help interpreting the printed output see ?print.stanreg #> * For info on the priors used see ?prior_summary.stanreg # }  data(d_sim_lin)  ermod_lin_exp_sel <- dev_ermod_lin_exp_sel(   data = d_sim_lin,   var_resp = \"response\",   var_exp_candidates = c(\"AUCss\", \"Cmaxss\") ) #> ℹ The exposure metric selected was: AUCss  ermod_lin_exp_sel #>  #> ── Linear ER model & exposure metric selection ───────────────────────────────── #> ℹ Use `plot_er_exp_sel()` for ER curve of all exposure metrics #> ℹ Use `plot_er()` with `show_orig_data = TRUE` for ER curve of the selected exposure metric #>  #> ── Exposure metrics comparison ── #>  #>        elpd_diff se_diff #> AUCss    0.00      0.00  #> Cmaxss -13.33      4.52  #>  #> ── Selected model ── #>  #> stan_glm #>  family:       gaussian [identity] #>  formula:      response ~ AUCss #>  observations: 101 #>  predictors:   2 #> ------ #>             Median MAD_SD #> (Intercept) 31.32   2.38  #> AUCss        0.47   0.04  #> Auxiliary parameter(s): #>       Median MAD_SD #> sigma 11.76   0.83  #> ------ #> * For help interpreting the printed output see ?print.stanreg #> * For info on the priors used see ?prior_summary.stanreg"},{"path":"https://genentech.github.io/BayesERtools/reference/dev_ermod_emax.html","id":null,"dir":"Reference","previous_headings":"","what":"Develop Emax model for continuous and binary endpoint — dev_ermod_emax","title":"Develop Emax model for continuous and binary endpoint — dev_ermod_emax","text":"functions used develop Emax model continuous binary endpoint. can also specify covariates included model; note categorical covariates allowed.","code":""},{"path":"https://genentech.github.io/BayesERtools/reference/dev_ermod_emax.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Develop Emax model for continuous and binary endpoint — dev_ermod_emax","text":"","code":"dev_ermod_emax(   data,   var_resp,   var_exposure,   l_var_cov = NULL,   gamma_fix = 1,   e0_fix = NULL,   emax_fix = NULL,   priors = NULL,   verbosity_level = 1,   chains = 4,   iter = 2000,   seed = sample.int(.Machine$integer.max, 1) )  dev_ermod_bin_emax(   data,   var_resp,   var_exposure,   l_var_cov = NULL,   gamma_fix = 1,   e0_fix = NULL,   emax_fix = NULL,   priors = NULL,   verbosity_level = 1,   chains = 4,   iter = 2000,   seed = sample.int(.Machine$integer.max, 1) )"},{"path":"https://genentech.github.io/BayesERtools/reference/dev_ermod_emax.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Develop Emax model for continuous and binary endpoint — dev_ermod_emax","text":"data Input data E-R analysis var_resp Response variable name character var_exposure Exposure variable names character l_var_cov names list categorical covariate variables character vector. See details param.cov argument rstanemax::stan_emax() rstanemax::stan_emax_binary() gamma_fix Hill coefficient, default fixed 1. See details rstanemax::stan_emax() rstanemax::stan_emax_binary() e0_fix See details rstanemax::stan_emax() rstanemax::stan_emax_binary() emax_fix See details rstanemax::stan_emax() rstanemax::stan_emax_binary() priors See details rstanemax::stan_emax() rstanemax::stan_emax_binary() verbosity_level Verbosity level. 0: output, 1: Display steps, 2: Display progress step, 3: Display MCMC sampling. chains Number chains Stan. iter Number iterations Stan. seed Random seed Stan model execution, see details rstan::sampling() used rstanemax::stan_emax() rstanemax::stan_emax_binary()","code":""},{"path":"https://genentech.github.io/BayesERtools/reference/dev_ermod_emax.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Develop Emax model for continuous and binary endpoint — dev_ermod_emax","text":"object class ermod_emax.ermod_bin_emax.","code":""},{"path":"https://genentech.github.io/BayesERtools/reference/dev_ermod_emax.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Develop Emax model for continuous and binary endpoint — dev_ermod_emax","text":"","code":"# \\donttest{ data_er_cont <- rstanemax::exposure.response.sample  ermod_emax <-   dev_ermod_emax(     data = data_er_cont,     var_exposure = \"exposure\",     var_resp = \"response\"   )  plot_er(ermod_emax, show_orig_data = TRUE)   data_er_cont_cov <- rstanemax::exposure.response.sample.with.cov  ermod_emax_w_cov <-   dev_ermod_emax(     data = data_er_cont_cov,     var_exposure = \"conc\",     var_resp = \"resp\",     l_var_cov = list(emax = \"cov2\", ec50 = \"cov3\", e0 = \"cov1\")   ) # }  # \\donttest{ data_er_bin <- rstanemax::exposure.response.sample.binary  ermod_bin_emax <-   dev_ermod_bin_emax(     data = data_er_bin,     var_exposure = \"conc\",     var_resp = \"y\"   )  plot_er(ermod_bin_emax, show_orig_data = TRUE)   ermod_bin_emax_w_cov <-   dev_ermod_bin_emax(     data = data_er_bin,     var_exposure = \"conc\",     var_resp = \"y_cov\",     l_var_cov = list(emax = \"sex\")   ) # }"},{"path":"https://genentech.github.io/BayesERtools/reference/dev_ermod_emax_exp_sel.html","id":null,"dir":"Reference","previous_headings":"","what":"Exposure metrics selection for Emax models — dev_ermod_emax_exp_sel","title":"Exposure metrics selection for Emax models — dev_ermod_emax_exp_sel","text":"functions used develop Emax model binary continuous endpoint, using various exposure metrics selecting best one.","code":""},{"path":"https://genentech.github.io/BayesERtools/reference/dev_ermod_emax_exp_sel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Exposure metrics selection for Emax models — dev_ermod_emax_exp_sel","text":"","code":"dev_ermod_emax_exp_sel(   data,   var_resp,   var_exp_candidates,   verbosity_level = 1,   chains = 4,   iter = 2000,   gamma_fix = 1,   e0_fix = NULL,   emax_fix = NULL,   priors = NULL,   seed = sample.int(.Machine$integer.max, 1) )  dev_ermod_bin_emax_exp_sel(   data,   var_resp,   var_exp_candidates,   verbosity_level = 1,   chains = 4,   iter = 2000,   gamma_fix = 1,   e0_fix = NULL,   emax_fix = NULL,   priors = NULL,   seed = sample.int(.Machine$integer.max, 1) )"},{"path":"https://genentech.github.io/BayesERtools/reference/dev_ermod_emax_exp_sel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Exposure metrics selection for Emax models — dev_ermod_emax_exp_sel","text":"data Input data E-R analysis var_resp Response variable name character var_exp_candidates Candidate exposure variable names character vector verbosity_level Verbosity level. 0: output, 1: Display steps, 2: Display progress step, 3: Display MCMC sampling. chains Number chains Stan. iter Number iterations Stan. gamma_fix Hill coefficient, default fixed 1. See details rstanemax::stan_emax() rstanemax::stan_emax_binary() e0_fix See details rstanemax::stan_emax() rstanemax::stan_emax_binary() emax_fix See details rstanemax::stan_emax() rstanemax::stan_emax_binary() priors See details rstanemax::stan_emax() rstanemax::stan_emax_binary() seed Random seed Stan model execution, see details rstan::sampling() used rstanemax::stan_emax() rstanemax::stan_emax_binary()","code":""},{"path":"https://genentech.github.io/BayesERtools/reference/dev_ermod_emax_exp_sel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Exposure metrics selection for Emax models — dev_ermod_emax_exp_sel","text":"object class ermod_emax_exp_sel ermod_bin_emax_exp_sel.","code":""},{"path":"https://genentech.github.io/BayesERtools/reference/dev_ermod_emax_exp_sel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Exposure metrics selection for Emax models — dev_ermod_emax_exp_sel","text":"","code":"# \\donttest{ data_er_cont <- rstanemax::exposure.response.sample noise <- 1 + 0.5 * stats::rnorm(length(data_er_cont$exposure)) data_er_cont$exposure2 <- data_er_cont$exposure * noise # Replace exposure < 0 with 0 data_er_cont$exposure2[data_er_cont$exposure2 < 0] <- 0  ermod_emax_exp_sel <-   dev_ermod_emax_exp_sel(     data = data_er_cont,     var_resp = \"response\",     var_exp_candidates = c(\"exposure\", \"exposure2\")   ) #> ℹ The exposure metric selected was: exposure  ermod_emax_exp_sel #>  #> ── Emax model & exposure metric selection ────────────────────────────────────── #> ℹ Use `plot_er_exp_sel()` for ER curve of all exposure metrics #> ℹ Use `plot_er()` with `show_orig_data = TRUE` for ER curve of the selected exposure metric #>  #> ── Exposure metrics comparison ── #>  #>           elpd_diff se_diff #> exposure   0.00      0.00   #> exposure2 -9.46      3.30   #>  #> ── Selected model ── #>  #> ---- Emax model fit with rstanemax ---- #>        mean se_mean    sd  2.5%   25%   50%   75%  97.5%   n_eff Rhat #> emax  92.01    0.12  6.07 80.13 88.01 92.02 96.20 103.86 2418.78    1 #> e0     5.72    0.10  4.72 -3.63  2.54  5.74  8.88  14.96 2085.81    1 #> ec50  75.96    0.49 20.45 45.07 61.24 73.36 87.46 124.72 1769.73    1 #> gamma  1.00     NaN  0.00  1.00  1.00  1.00  1.00   1.00     NaN  NaN #> sigma 16.63    0.03  1.56 13.92 15.50 16.51 17.58  19.96 2735.09    1 #> * Use `extract_stanfit()` function to extract raw stanfit object #> * Use `extract_param()` function to extract posterior draws of key parameters #> * Use `plot()` function to visualize model fit #> * Use `posterior_predict()` or `posterior_predict_quantile()` function to get #>   raw predictions or make predictions on new data #> * Use `extract_obs_mod_frame()` function to extract raw data  #>   in a processed format (useful for plotting) # }  # \\donttest{ data_er_bin <- rstanemax::exposure.response.sample.binary  noise <- 1 + 0.5 * stats::rnorm(length(data_er_bin$conc)) data_er_bin$conc2 <- data_er_bin$conc * noise data_er_bin$conc2[data_er_bin$conc2 < 0] <- 0  ermod_bin_emax_exp_sel <-   dev_ermod_bin_emax_exp_sel(     data = data_er_bin,     var_resp = \"y\",     var_exp_candidates = c(\"conc\", \"conc2\")   ) #> ℹ The exposure metric selected was: conc # }"},{"path":"https://genentech.github.io/BayesERtools/reference/edit_spec_coveff.html","id":null,"dir":"Reference","previous_headings":"","what":"Customize specifications for covariate effect simulations/visualizations — edit_spec_coveff","title":"Customize specifications for covariate effect simulations/visualizations — edit_spec_coveff","text":"build_spec_coveff_one_variable() helper function create new specification single variable. useful want customize specification single variable. replace_spec_coveff() used replace specification () variables original specification data frame. want replace multiple variables, can just stack specifications together.","code":""},{"path":"https://genentech.github.io/BayesERtools/reference/edit_spec_coveff.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Customize specifications for covariate effect simulations/visualizations — edit_spec_coveff","text":"","code":"build_spec_coveff_one_variable(   var_name,   values_vec,   qi_width_cov = 0.9,   n_sigfig = 3,   use_seps = TRUE,   drop_trailing_dec_mark = TRUE,   show_ref_value = TRUE )  replace_spec_coveff(spec_orig, spec_new, replace_ref_value = FALSE)"},{"path":"https://genentech.github.io/BayesERtools/reference/edit_spec_coveff.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Customize specifications for covariate effect simulations/visualizations — edit_spec_coveff","text":"var_name name variable new spec created. values_vec vector values creating new spec. qi_width_cov width quantile interval continuous covariates forest plot. Default 0.9 (.e. visualize effect covariate effect 5th 95th percentile values). n_sigfig Number significant figures form value_label continuous variables. See gt::vec_fmt_number() details. use_seps Whether use separators thousands printing numbers. See gt::vec_fmt_number() details. drop_trailing_dec_mark Whether drop trailing decimal mark (\".\") value_label continuous variables. See gt::vec_fmt_number() details. show_ref_value Whether show reference value plot table. Setting results show_ref_value column specification data frame. spec_orig Original specification data frame. spec_new New specification data frame. can generated build_spec_coveff_one_variable() manually crafting following variables: var_name, var_label, value_order, value_annot, value_label, value_cont value_cat, is_ref_value, show_ref_value. can multiple variables stacked together. replace_ref_value Whether replace reference values original specification data frame. Default FALSE; case, show_ref_value set FALSE can confusing. set replace_ref_value TRUE, reference calculation forest plot also done one spec_new.","code":""},{"path":"https://genentech.github.io/BayesERtools/reference/edit_spec_coveff.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Customize specifications for covariate effect simulations/visualizations — edit_spec_coveff","text":"See build_spec_coveff() structure return object. build_spec_coveff_one_variable() returns data frame corresponding specification single variable, can used input replace_spec_coveff().","code":""},{"path":"https://genentech.github.io/BayesERtools/reference/edit_spec_coveff.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Customize specifications for covariate effect simulations/visualizations — edit_spec_coveff","text":"","code":"set.seed(1234) data(d_sim_binom_cov_hgly2)  ermod_bin <- suppressWarnings(dev_ermod_bin(   data = d_sim_binom_cov_hgly2, var_resp = \"AEFLAG\",   var_exposure = \"AUCss_1000\", var_cov = c(\"BGLUC\", \"RACE\"),   verbosity_level = 0,   # Below option to make the example run fast   chains = 2, iter = 1000 ))  spec_coveff <- build_spec_coveff(ermod_bin) spec_new_bgluc <- build_spec_coveff_one_variable(   \"BGLUC\", seq(4, 8, by = 0.1),   qi_width_cov = 0.8, show_ref_value = FALSE ) spec_coveff_new <- replace_spec_coveff(spec_coveff, spec_new_bgluc) plot_coveff(ermod_bin, spec_coveff = spec_coveff_new)"},{"path":"https://genentech.github.io/BayesERtools/reference/ermod_cov_sel_method.html","id":null,"dir":"Reference","previous_headings":"","what":"S3 methods for the classes ermod_bin_cov_sel — ermod_cov_sel_method","title":"S3 methods for the classes ermod_bin_cov_sel — ermod_cov_sel_method","text":"S3 methods classes ermod_bin_cov_sel","code":""},{"path":"https://genentech.github.io/BayesERtools/reference/ermod_cov_sel_method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"S3 methods for the classes ermod_bin_cov_sel — ermod_cov_sel_method","text":"","code":"# S3 method for class 'ermod_cov_sel' print(x, digits = 2, ...)  # S3 method for class 'ermod_cov_sel' plot(x, ...)"},{"path":"https://genentech.github.io/BayesERtools/reference/ermod_cov_sel_method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"S3 methods for the classes ermod_bin_cov_sel — ermod_cov_sel_method","text":"x object class ermod_bin_cov_sel digits Number digits print ... Additional arguments passed functions","code":""},{"path":"https://genentech.github.io/BayesERtools/reference/ermod_cov_sel_method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"S3 methods for the classes ermod_bin_cov_sel — ermod_cov_sel_method","text":"return value, called print plot side effects","code":""},{"path":"https://genentech.github.io/BayesERtools/reference/ermod_exp_sel_method.html","id":null,"dir":"Reference","previous_headings":"","what":"S3 methods for the classes ermod_exp_sel — ermod_exp_sel_method","title":"S3 methods for the classes ermod_exp_sel — ermod_exp_sel_method","text":"S3 methods classes ermod_exp_sel","code":""},{"path":"https://genentech.github.io/BayesERtools/reference/ermod_exp_sel_method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"S3 methods for the classes ermod_exp_sel — ermod_exp_sel_method","text":"","code":"# S3 method for class 'ermod_exp_sel' print(x, digits = 2, ...)  # S3 method for class 'ermod_exp_sel' plot(x, ...)"},{"path":"https://genentech.github.io/BayesERtools/reference/ermod_exp_sel_method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"S3 methods for the classes ermod_exp_sel — ermod_exp_sel_method","text":"x object class ermod_bin_exp_sel digits Number digits print ... Additional arguments passed functions","code":""},{"path":"https://genentech.github.io/BayesERtools/reference/ermod_exp_sel_method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"S3 methods for the classes ermod_exp_sel — ermod_exp_sel_method","text":"return value, called print plot side effects","code":""},{"path":"https://genentech.github.io/BayesERtools/reference/ermod_method.html","id":null,"dir":"Reference","previous_headings":"","what":"S3 methods for the classes ermod_* — ermod_method","title":"S3 methods for the classes ermod_* — ermod_method","text":"S3 methods classes ermod_*","code":""},{"path":"https://genentech.github.io/BayesERtools/reference/ermod_method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"S3 methods for the classes ermod_* — ermod_method","text":"","code":"# S3 method for class 'ermod' print(x, digits = 2, ...)  # S3 method for class 'ermod_bin' plot(x, show_orig_data = FALSE, ...)  # S3 method for class 'ermod' coef(object, ...)  # S3 method for class 'ermod' summary(object, ...)"},{"path":"https://genentech.github.io/BayesERtools/reference/ermod_method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"S3 methods for the classes ermod_* — ermod_method","text":"x object class ermod_* digits Number digits print ... Additional arguments passed functions show_orig_data logical, whether show data points model development dataset. Default FALSE. support plotting data used model development. want use data, consider adding geom_point() plot manually. object object class ermod_*","code":""},{"path":"https://genentech.github.io/BayesERtools/reference/ermod_method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"S3 methods for the classes ermod_* — ermod_method","text":"print() plot(): return value, called side effects coef(): Coefficients model summary(): Summary model","code":""},{"path":"https://genentech.github.io/BayesERtools/reference/ersim_method.html","id":null,"dir":"Reference","previous_headings":"","what":"S3 methods for the classes ersim_* and ersim_med_qi_* — ersim_method","title":"S3 methods for the classes ersim_* and ersim_med_qi_* — ersim_method","text":"S3 methods classes ersim_* ersim_med_qi_*","code":""},{"path":"https://genentech.github.io/BayesERtools/reference/ersim_method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"S3 methods for the classes ersim_* and ersim_med_qi_* — ersim_method","text":"","code":"# S3 method for class 'ersim' plot(x, show_orig_data = FALSE, ...)  # S3 method for class 'ersim_med_qi' plot(x, show_orig_data = FALSE, ...)"},{"path":"https://genentech.github.io/BayesERtools/reference/ersim_method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"S3 methods for the classes ersim_* and ersim_med_qi_* — ersim_method","text":"x object classes ersim_* ersim_med_qi_* show_orig_data logical, whether show data points model development dataset. Default FALSE. support plotting data used model development. want use data, consider adding geom_point() plot manually. ... Additional arguments passed functions","code":""},{"path":"https://genentech.github.io/BayesERtools/reference/ersim_method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"S3 methods for the classes ersim_* and ersim_med_qi_* — ersim_method","text":"return value, called print plot side effects","code":""},{"path":"https://genentech.github.io/BayesERtools/reference/eval_ermod.html","id":null,"dir":"Reference","previous_headings":"","what":"Evaluate exposure-response model prediction performance — eval_ermod","title":"Evaluate exposure-response model prediction performance — eval_ermod","text":"function evaluates performance exposure-response model using various metrics.","code":""},{"path":"https://genentech.github.io/BayesERtools/reference/eval_ermod.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Evaluate exposure-response model prediction performance — eval_ermod","text":"","code":"eval_ermod(   ermod,   eval_type = c(\"training\", \"kfold\", \"test\"),   newdata = NULL,   summary_method = c(\"median\", \"mean\"),   k = 5,   seed_kfold = NULL )"},{"path":"https://genentech.github.io/BayesERtools/reference/eval_ermod.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Evaluate exposure-response model prediction performance — eval_ermod","text":"ermod object class ermod. eval_type character string specifying evaluation dataset. Options : training: Use training dataset. test: Use new dataset evaluation. kfold: Perform k-fold cross-validation (uses newdata provided, otherwise uses training dataset). newdata data frame containing new data evaluation eval_type set test kfold. summary_method character string specifying summarize simulation draws. Default median. k number folds cross-validation. Default 5. seed_kfold Random seed k-fold cross-validation.","code":""},{"path":"https://genentech.github.io/BayesERtools/reference/eval_ermod.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Evaluate exposure-response model prediction performance — eval_ermod","text":"tibble calculated performance metrics, AUROC RMSE, depending model type.","code":""},{"path":"https://genentech.github.io/BayesERtools/reference/eval_ermod.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Evaluate exposure-response model prediction performance — eval_ermod","text":"","code":"# \\donttest{ data(d_sim_binom_cov_hgly2) d_split <- rsample::initial_split(d_sim_binom_cov_hgly2) d_train <- rsample::training(d_split) d_test <- rsample::testing(d_split)  ermod_bin <- dev_ermod_bin(   data = d_train,   var_resp = \"AEFLAG\",   var_exposure = \"AUCss_1000\",   var_cov = \"BHBA1C_5\",   # Settings to make the example run faster   chains = 2,   iter = 1000 )  metrics_training <- eval_ermod(ermod_bin, eval_type = \"training\") metrics_test <- eval_ermod(ermod_bin, eval_type = \"test\", newdata = d_test) metrics_kfold <- eval_ermod(ermod_bin, eval_type = \"kfold\", k = 3)  print(metrics_training) #> # A tibble: 2 × 3 #>   .metric     .estimator .estimate #>   <chr>       <chr>          <dbl> #> 1 roc_auc     binary         0.738 #> 2 mn_log_loss binary         0.526 print(metrics_test) #> # A tibble: 2 × 3 #>   .metric     .estimator .estimate #>   <chr>       <chr>          <dbl> #> 1 roc_auc     binary         0.815 #> 2 mn_log_loss binary         0.421 print(metrics_kfold) #> # A tibble: 6 × 4 #>   fold_id .metric     .estimator .estimate #>     <int> <chr>       <chr>          <dbl> #> 1       1 roc_auc     binary         0.742 #> 2       2 roc_auc     binary         0.764 #> 3       3 roc_auc     binary         0.695 #> 4       1 mn_log_loss binary         0.492 #> 5       2 mn_log_loss binary         0.512 #> 6       3 mn_log_loss binary         0.595 # }"},{"path":"https://genentech.github.io/BayesERtools/reference/extract_coef_exp_ci.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract credible interval of the exposure coefficient — extract_coef_exp_ci","title":"Extract credible interval of the exposure coefficient — extract_coef_exp_ci","text":"Extract credible interval exposure coefficient","code":""},{"path":"https://genentech.github.io/BayesERtools/reference/extract_coef_exp_ci.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract credible interval of the exposure coefficient — extract_coef_exp_ci","text":"","code":"extract_coef_exp_ci(x, ci_width = 0.95)"},{"path":"https://genentech.github.io/BayesERtools/reference/extract_coef_exp_ci.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract credible interval of the exposure coefficient — extract_coef_exp_ci","text":"x object class ermod_bin ermod_lin ci_width Width credible interval","code":""},{"path":"https://genentech.github.io/BayesERtools/reference/extract_coef_exp_ci.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract credible interval of the exposure coefficient — extract_coef_exp_ci","text":"named vector length 2 lower upper bounds credible interval (.lower, .upper)","code":""},{"path":"https://genentech.github.io/BayesERtools/reference/extract_ermod.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract elements from an object of class ermod_* — extract_ermod","title":"Extract elements from an object of class ermod_* — extract_ermod","text":"Extract elements object class ermod_*","code":""},{"path":"https://genentech.github.io/BayesERtools/reference/extract_ermod.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract elements from an object of class ermod_* — extract_ermod","text":"","code":"# S3 method for class 'ermod' extract_data(x)  # S3 method for class 'ermod' extract_mod(x)  # S3 method for class 'ermod' extract_var_resp(x)  # S3 method for class 'ermod' extract_var_exposure(x)  # S3 method for class 'ermod' extract_var_cov(x)  # S3 method for class 'ermod_exp_sel' extract_exp_sel_list_model(x)  # S3 method for class 'ermod_exp_sel' extract_exp_sel_comp(x)  # S3 method for class 'ermod_cov_sel' extract_var_selected(x)"},{"path":"https://genentech.github.io/BayesERtools/reference/extract_ermod.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract elements from an object of class ermod_* — extract_ermod","text":"x object class ermod_*","code":""},{"path":"https://genentech.github.io/BayesERtools/reference/extract_ermod.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract elements from an object of class ermod_* — extract_ermod","text":"extract_data() extracts data used model fit. extract_mod() extracts model fit object. extract_var_resp() extracts response variable name extract_var_exposure() extracts exposure metric name extract_var_cov() extracts covariates name extract_exp_sel_list_model() extracts list fitted models exposure metrics. extract_exp_sel_comp() extracts comparison results exposure metrics. extract_var_selected() extracts selected variables (exposure covariates)final model covariate selection.","code":""},{"path":"https://genentech.github.io/BayesERtools/reference/extract_ersim.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract elements from objects of the classes ersim_* and `ersim_med_qi_*“ — extract_ersim","title":"Extract elements from objects of the classes ersim_* and `ersim_med_qi_*“ — extract_ersim","text":"Extract elements objects classes ersim_* `ersim_med_qi_*“","code":""},{"path":"https://genentech.github.io/BayesERtools/reference/extract_ersim.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract elements from objects of the classes ersim_* and `ersim_med_qi_*“ — extract_ersim","text":"","code":"# S3 method for class 'ersim' extract_data(x)  # S3 method for class 'ersim_med_qi' extract_data(x)  # S3 method for class 'ersim' extract_var_resp(x)  # S3 method for class 'ersim_med_qi' extract_var_resp(x)  # S3 method for class 'ersim' extract_var_exposure(x)  # S3 method for class 'ersim_med_qi' extract_var_exposure(x)  # S3 method for class 'ersim' extract_var_cov(x)  # S3 method for class 'ersim_med_qi' extract_var_cov(x)"},{"path":"https://genentech.github.io/BayesERtools/reference/extract_ersim.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract elements from objects of the classes ersim_* and `ersim_med_qi_*“ — extract_ersim","text":"x object class ersim_*","code":""},{"path":"https://genentech.github.io/BayesERtools/reference/extract_ersim.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract elements from objects of the classes ersim_* and `ersim_med_qi_*“ — extract_ersim","text":"extract_data() extracts data used model fit. extract_mod() extracts model fit object. extract_var_resp() extracts response variable name extract_var_exposure() extracts exposure metric name extract_var_cov() extracts covariates name extract_exp_sel_list_model() extracts list fitted models exposure metrics. extract_exp_sel_comp() extracts comparison results exposure metrics. extract_var_selected() extracts selected variables (exposure covariates)final model covariate selection.","code":""},{"path":"https://genentech.github.io/BayesERtools/reference/extract_method.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract elements from S3 objects — extract_method","title":"Extract elements from S3 objects — extract_method","text":"S3 methods defined ermod_* (see extract_ermod) ersim_* (see extract_ersim) classes.","code":""},{"path":"https://genentech.github.io/BayesERtools/reference/extract_method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract elements from S3 objects — extract_method","text":"","code":"extract_data(x)  extract_mod(x)  extract_var_resp(x)  extract_var_exposure(x)  extract_var_cov(x)  extract_exp_sel_list_model(x)  extract_exp_sel_comp(x)  extract_var_selected(x)"},{"path":"https://genentech.github.io/BayesERtools/reference/extract_method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract elements from S3 objects — extract_method","text":"x object extract elements ","code":""},{"path":"https://genentech.github.io/BayesERtools/reference/extract_method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract elements from S3 objects — extract_method","text":"extract_data() extracts data used model fit. extract_mod() extracts model fit object. extract_var_resp() extracts response variable name extract_var_exposure() extracts exposure metric name extract_var_cov() extracts covariates name extract_exp_sel_list_model() extracts list fitted models exposure metrics. extract_exp_sel_comp() extracts comparison results exposure metrics. extract_var_selected() extracts selected variables (exposure covariates)final model covariate selection.","code":""},{"path":"https://genentech.github.io/BayesERtools/reference/loo.html","id":null,"dir":"Reference","previous_headings":"","what":"Efficient approximate leave-one-out cross-validation (LOO) — loo","title":"Efficient approximate leave-one-out cross-validation (LOO) — loo","text":"See loo::loo() details.","code":""},{"path":"https://genentech.github.io/BayesERtools/reference/loo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Efficient approximate leave-one-out cross-validation (LOO) — loo","text":"","code":"loo(x, ...)  # S3 method for class 'ermod' loo(x, ...)  # S3 method for class 'ermod_emax' loo(x, ...)  # S3 method for class 'ermod_bin_emax' loo(x, ...)"},{"path":"https://genentech.github.io/BayesERtools/reference/loo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Efficient approximate leave-one-out cross-validation (LOO) — loo","text":"x object class ermod ... Additional arguments passed loo::loo()","code":""},{"path":"https://genentech.github.io/BayesERtools/reference/loo.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Efficient approximate leave-one-out cross-validation (LOO) — loo","text":"object class loo","code":""},{"path":"https://genentech.github.io/BayesERtools/reference/p_direction.html","id":null,"dir":"Reference","previous_headings":"","what":"Probability of Direction (pd) — p_direction","title":"Probability of Direction (pd) — p_direction","text":"Compute Probability Direction (pd). Although differently expressed, index fairly similar (.e., strongly correlated) frequentist p-value. See bayestestR::p_direction() vignette(\"overview_of_vignettes\", package = \"bayestestR\") > \"Probability Direction (pd)\" page details. converting pd frequentist p-value, see bayestestR::pd_to_p().","code":""},{"path":"https://genentech.github.io/BayesERtools/reference/p_direction.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Probability of Direction (pd) — p_direction","text":"","code":"p_direction(x, ...)  # S3 method for class 'ermod_bin' p_direction(   x,   null = 0,   as_p = FALSE,   as_num = FALSE,   direction = \"two-sided\",   ... )"},{"path":"https://genentech.github.io/BayesERtools/reference/p_direction.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Probability of Direction (pd) — p_direction","text":"x object class ermod_bin_* ... Additional arguments passed bayestestR::p_direction(). null null hypothesis value. Default 0. as_p TRUE, p-direction (pd) values converted frequentist p-value using bayestestR::pd_to_p(). works as_num = TRUE. as_num TRUE, output converted numeric value. direction type p-value requested provided as_p = TRUE. Can \"two-sided\" (default, two tailed) \"one-sided\" (one tailed).","code":""},{"path":"https://genentech.github.io/BayesERtools/reference/p_direction.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Probability of Direction (pd) — p_direction","text":"See bayestestR::p_direction() details.","code":""},{"path":"https://genentech.github.io/BayesERtools/reference/p_direction.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Probability of Direction (pd) — p_direction","text":"class ermod_bin_*, calculates pd exposure variable.","code":""},{"path":"https://genentech.github.io/BayesERtools/reference/p_direction.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Probability of Direction (pd) — p_direction","text":"","code":"df_er_dr2 <-   d_sim_binom_cov |>   dplyr::filter(     AETYPE == \"dr2\",     ID %in% seq(1, 500, by = 5)   ) |>   dplyr::mutate(AUCss_1000 = AUCss / 1000, BHBA1C_5 = BHBA1C / 5)  ermod_bin <- dev_ermod_bin(   data = df_er_dr2,   var_resp = \"AEFLAG\",   var_exposure = \"AUCss_1000\",   var_cov = \"BHBA1C_5\" )  p_direction(ermod_bin, as_num = TRUE, as_p = TRUE) #> [1] 0.571"},{"path":"https://genentech.github.io/BayesERtools/reference/plot_cov_sel.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot variable selection performance — plot_cov_sel","title":"Plot variable selection performance — plot_cov_sel","text":"Plot variable selection performance","code":""},{"path":"https://genentech.github.io/BayesERtools/reference/plot_cov_sel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot variable selection performance — plot_cov_sel","text":"","code":"plot_submod_performance(x)  plot_var_ranking(x)"},{"path":"https://genentech.github.io/BayesERtools/reference/plot_cov_sel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot variable selection performance — plot_cov_sel","text":"x object class ermod_bin_cov_sel","code":""},{"path":"https://genentech.github.io/BayesERtools/reference/plot_cov_sel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot variable selection performance — plot_cov_sel","text":"return value, called plotting side effect.","code":""},{"path":"https://genentech.github.io/BayesERtools/reference/plot_cov_sel.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot variable selection performance — plot_cov_sel","text":"plot_submod_performance() plots performance submodels evaluated variable selection. plot_var_ranking() plots variable ranking evaluated variable selection.","code":""},{"path":"https://genentech.github.io/BayesERtools/reference/plot_cov_sel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot variable selection performance — plot_cov_sel","text":"","code":"# \\donttest{ data(d_sim_binom_cov_hgly2)  er_binary_cov_model_kfold <- dev_ermod_bin_cov_sel(   data = d_sim_binom_cov_hgly2,   var_resp = \"AEFLAG\",   var_exposure = \"AUCss_1000\",   var_cov_candidate = c(     \"BAGE_10\", \"BWT_10\", \"BGLUC\",     \"BHBA1C_5\", \"RACE\", \"VISC\"   ),   cv_method = \"kfold\",   k = 3, # Choose 3 to make the example go fast   validate_search = TRUE, ) #>  #> ── Step 1: Full reference model fit ── #>  #> ── Step 2: Variable selection ── #>  #> Fitting model 1 out of 3 #> Fitting model 2 out of 3 #> Fitting model 3 out of 3 #> ℹ The variables selected were: AUCss_1000, BHBA1C_5, BGLUC #>  #> ── Step 3: Final model fit ── #>  #> ── Cov mod dev complete ── #>   plot_submod_performance(er_binary_cov_model_kfold)  plot_var_ranking(er_binary_cov_model_kfold)  # }"},{"path":"https://genentech.github.io/BayesERtools/reference/plot_coveff.html","id":null,"dir":"Reference","previous_headings":"","what":"Visualize the covariate effects for ER model — plot_coveff","title":"Visualize the covariate effects for ER model — plot_coveff","text":"Visualize covariate effects ER model","code":""},{"path":"https://genentech.github.io/BayesERtools/reference/plot_coveff.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visualize the covariate effects for ER model — plot_coveff","text":"","code":"plot_coveff(x, ...)  # S3 method for class 'ermod' plot_coveff(   x,   data = NULL,   spec_coveff = NULL,   qi_width = 0.9,   qi_width_cov = 0.9,   ... )  # S3 method for class 'coveffsim' plot_coveff(x, ...)"},{"path":"https://genentech.github.io/BayesERtools/reference/plot_coveff.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visualize the covariate effects for ER model — plot_coveff","text":"x object class ermod, coveffsim, subclasses ... currently used data optional data frame derive covariate values forest plots. NULL (default), data used fit model used. spec_coveff can supply spec_coveff sim_coveff() plot_coveff(), already built manually build_spec_coveff(). See build_spec_coveff() detail. qi_width width credible interval covariate effect. translate width error bars forest plot. qi_width_cov width quantile interval continuous covariates forest plot. Default 0.9 (.e. visualize effect covariate effect 5th 95th percentile values).","code":""},{"path":"https://genentech.github.io/BayesERtools/reference/plot_coveff.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Visualize the covariate effects for ER model — plot_coveff","text":"ggplot object","code":""},{"path":"https://genentech.github.io/BayesERtools/reference/plot_coveff.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Visualize the covariate effects for ER model — plot_coveff","text":"","code":"data(d_sim_binom_cov_hgly2)  ermod_bin <- dev_ermod_bin(   data = d_sim_binom_cov_hgly2,   var_resp = \"AEFLAG\",   var_exposure = \"AUCss_1000\",   var_cov = \"BHBA1C_5\", )  plot_coveff(ermod_bin)"},{"path":"https://genentech.github.io/BayesERtools/reference/plot_er.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot ER model simulations — plot_er","title":"Plot ER model simulations — plot_er","text":"Plot ER model simulations","code":""},{"path":"https://genentech.github.io/BayesERtools/reference/plot_er.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot ER model simulations — plot_er","text":"","code":"plot_er(x, ...)  # S3 method for class 'ersim_med_qi' plot_er(   x,   show_orig_data = FALSE,   show_coef_exp = FALSE,   show_caption = FALSE,   options_orig_data = list(),   options_coef_exp = list(),   options_caption = list(),   ... )  # S3 method for class 'ersim' plot_er(   x,   show_orig_data = FALSE,   show_coef_exp = FALSE,   show_caption = FALSE,   options_orig_data = list(),   options_coef_exp = list(),   options_caption = list(),   qi_width_sim = 0.95,   ... )  # S3 method for class 'ermod' plot_er(   x,   show_orig_data = FALSE,   show_coef_exp = FALSE,   show_caption = FALSE,   options_orig_data = list(),   options_coef_exp = list(),   options_caption = list(),   n_draws_sim = if (marginal) 200 else NULL,   seed_sample_draws = NULL,   marginal = FALSE,   exposure_range = NULL,   num_exposures = 51,   qi_width_sim = 0.95,   ... )"},{"path":"https://genentech.github.io/BayesERtools/reference/plot_er.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot ER model simulations — plot_er","text":"x object class ermod, ersim,ersim_med_qi, subclasses ... currently used show_orig_data logical, whether show data points model development dataset. Default FALSE. support plotting data used model development. want use data, consider adding geom_point() plot manually. show_coef_exp logical, whether show credible interval exposure coefficient. Default FALSE. available linear linear logistic regression models. show_caption logical, whether show caption note plot. Default FALSE. options_orig_data List options configuring original data displayed. Possible options include: add_boxplot: Logical, whether add boxplot exposure values. Default FALSE. boxplot_height: Height boxplot relative main plot. Default 0.15. show_boxplot_y_title: Logical, whether show y-axis title boxplot. Default TRUE. var_group: column use grouping data plotting. specified, observed data points boxplot grouped colored column. Default NULL. n_bins: Number bins use observed probability summary. relevant binary models. Default 4. qi_width: Width quantile interval (confidence interval) observed probability summary. relevant binary models. Default 0.95. options_coef_exp List options configuring exposure coefficient credible interval displayed. Possible options include: qi_width: Width quantile interval (credible interval) exposure coefficient. Default 0.95. n_sigfig: Number significant figures display. Default 3. pos_x: x-coordinate text label. NULL (default), set minimum value exposure variable. pos_y: y-coordinate text label. NULL (default), set 0.9 logistic regression models maximum value response variable original data linear regression models. size: Size text label. Default 4. options_caption List options configuring caption note. Possible options include: orig_data: Logical, whether show caption note observed data. Default FALSE. orig_data_summary: Logical, whether show caption note observed data summary. Default FALSE. relevant binary models. coef_exp: Logical, whether show caption note exposure coefficient credible interval. Default FALSE. qi_width_sim Width quantile interval summarize simulated draws. n_draws_sim Number draws simulate response exposure value. Set NULL use draws model object. Default NULL unless marginal set TRUE (case 200 default reduce computation time). seed_sample_draws Seed sampling draws. Default NULL. marginal logical, whether use marginal ER simulation. Default FALSE. Need set TRUE model covariates plot work. exposure_range relevant input x ermod object. Range exposure values simulate. NULL (default), set range exposure variable original data model development. num_exposures relevant exposure_range. Number exposure values simulate.","code":""},{"path":"https://genentech.github.io/BayesERtools/reference/plot_er.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot ER model simulations — plot_er","text":"ggplot object","code":""},{"path":"https://genentech.github.io/BayesERtools/reference/plot_er.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot ER model simulations — plot_er","text":"Plotting ermod done default values. suitable, can always perform simulation manually use plot_er() simulated data.","code":""},{"path":"https://genentech.github.io/BayesERtools/reference/plot_er.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot ER model simulations — plot_er","text":"","code":"data(d_sim_binom_cov_hgly2)  ermod_bin <- dev_ermod_bin(   data = d_sim_binom_cov_hgly2,   var_resp = \"AEFLAG\",   var_exposure = \"AUCss_1000\" )  ersim_med_qi <- sim_er_curve(   ermod_bin,   output_type = \"median_qi\" )  plot_er(ersim_med_qi, show_orig_data = TRUE) +   xgxr::xgx_scale_x_log10()"},{"path":"https://genentech.github.io/BayesERtools/reference/plot_er_exp_sel.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot exposure metric selection comparison — plot_er_exp_sel","title":"Plot exposure metric selection comparison — plot_er_exp_sel","text":"Plot ER curve exposure metric compare .","code":""},{"path":"https://genentech.github.io/BayesERtools/reference/plot_er_exp_sel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot exposure metric selection comparison — plot_er_exp_sel","text":"","code":"plot_er_exp_sel(x, n_draws_sim = NULL)"},{"path":"https://genentech.github.io/BayesERtools/reference/plot_er_exp_sel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot exposure metric selection comparison — plot_er_exp_sel","text":"x object class ermod_bin_exp_sel n_draws_sim Number draws simulate response exposure value. Default NULL (use draws model object)","code":""},{"path":"https://genentech.github.io/BayesERtools/reference/plot_er_exp_sel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot exposure metric selection comparison — plot_er_exp_sel","text":"return value, called plotting side effect.","code":""},{"path":"https://genentech.github.io/BayesERtools/reference/plot_er_exp_sel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot exposure metric selection comparison — plot_er_exp_sel","text":"","code":"# \\donttest{ data(d_sim_binom_cov_hgly2)  ermod_bin_exp_sel <-   dev_ermod_bin_exp_sel(     data = d_sim_binom_cov_hgly2,     var_resp = \"AEFLAG\",     var_exp_candidates = c(\"AUCss_1000\", \"Cmaxss\", \"Cminss\")   ) #> ℹ The exposure metric selected was: AUCss_1000  plot_er_exp_sel(ermod_bin_exp_sel) + xgxr::xgx_scale_x_log10()  # }"},{"path":"https://genentech.github.io/BayesERtools/reference/plot_er_gof.html","id":null,"dir":"Reference","previous_headings":"","what":"Default GOF plot for ER model — plot_er_gof","title":"Default GOF plot for ER model — plot_er_gof","text":"wrapper function plot_er() default options goodness--fit (GOF) plots ER models.","code":""},{"path":"https://genentech.github.io/BayesERtools/reference/plot_er_gof.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Default GOF plot for ER model — plot_er_gof","text":"","code":"plot_er_gof(   x,   add_boxplot = !is.null(var_group),   boxplot_height = 0.15,   show_boxplot_y_title = FALSE,   var_group = NULL,   n_bins = 4,   qi_width_obs = 0.95,   show_coef_exp = FALSE,   coef_pos_x = NULL,   coef_pos_y = NULL,   coef_size = 4,   qi_width_coef = 0.95,   qi_width_sim = 0.95,   show_caption = TRUE )"},{"path":"https://genentech.github.io/BayesERtools/reference/plot_er_gof.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Default GOF plot for ER model — plot_er_gof","text":"x object class ermod, ersim,ersim_med_qi, subclasses add_boxplot Logical, whether add boxplot exposure values. Default TRUE var_group specified, otherwise FALSE. boxplot_height Height boxplot relative main plot. Default 0.15. show_boxplot_y_title Logical, whether show y-axis title boxplot. Default FALSE. var_group column use grouping data plotting. specified, observed data points boxplot grouped colored column. Default NULL. n_bins Number bins use observed probability summary. relevant binary models. Default 4. qi_width_obs Confidence level observed probability summary. Default 0.95. show_coef_exp Logical, whether show credible interval exposure coefficient. Default FALSE. available linear linear logistic regression models. coef_pos_x x-coordinate text label. NULL (default), set minimum value exposure variable. coef_pos_y y-coordinate text label. NULL (default), set 0.9 logistic regression models maximum value response variable original data linear regression models. coef_size Size text label. Default 4. qi_width_coef Width credible interval exposure coefficient. Default 0.95. qi_width_sim Width quantile interval summarize simulated draws. Default 0.95. show_caption Logical, whether show caption note plot. Default TRUE.","code":""},{"path":"https://genentech.github.io/BayesERtools/reference/plot_er_gof.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Default GOF plot for ER model — plot_er_gof","text":"ggplot object","code":""},{"path":"https://genentech.github.io/BayesERtools/reference/plot_er_gof.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Default GOF plot for ER model — plot_er_gof","text":"following code generate plot:","code":"plot_er(   x,   show_orig_data = TRUE,   show_coef_exp = show_coef_exp,   show_caption = show_caption,   options_orig_data = list(     add_boxplot = add_boxplot, boxplot_height = boxplot_height,     show_boxplot_y_title = show_boxplot_y_title,     var_group = var_group,     n_bins = n_bins, qi_width = qi_width_obs   ),   options_coef_exp = list(     qi_width = qi_width_coef, pos_x = coef_pos_x, pos_y = coef_pos_y,     size = coef_size   ),   options_caption = list(     orig_data_summary = TRUE, coef_exp = show_coef_exp   ),   qi_width_sim = qi_width_sim )"},{"path":"https://genentech.github.io/BayesERtools/reference/plot_er_gof.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Default GOF plot for ER model — plot_er_gof","text":"","code":"data(d_sim_binom_cov_hgly2)  ermod_bin <- dev_ermod_bin(   data = d_sim_binom_cov_hgly2,   var_resp = \"AEFLAG\",   var_exposure = \"AUCss_1000\" )  plot_er_gof(ermod_bin, var_group = \"Dose_mg\", show_coef_exp = TRUE)"},{"path":"https://genentech.github.io/BayesERtools/reference/print_coveff.html","id":null,"dir":"Reference","previous_headings":"","what":"Format the covariate effect simulation results for printing — print_coveff","title":"Format the covariate effect simulation results for printing — print_coveff","text":"Format covariate effect simulation results printing","code":""},{"path":"https://genentech.github.io/BayesERtools/reference/print_coveff.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format the covariate effect simulation results for printing — print_coveff","text":"","code":"print_coveff(   coveffsim,   n_sigfig = 3,   use_seps = TRUE,   drop_trailing_dec_mark = TRUE )"},{"path":"https://genentech.github.io/BayesERtools/reference/print_coveff.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format the covariate effect simulation results for printing — print_coveff","text":"coveffsim object class coveffsim n_sigfig Number significant figures form value_label continuous variables. See gt::vec_fmt_number() details. use_seps Whether use separators thousands printing numbers. See gt::vec_fmt_number() details. drop_trailing_dec_mark Whether drop trailing decimal mark (\".\") value_label continuous variables. See gt::vec_fmt_number() details.","code":""},{"path":"https://genentech.github.io/BayesERtools/reference/print_coveff.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Format the covariate effect simulation results for printing — print_coveff","text":"data frame formatted covariate effect simulation results following columns: var_label: label covariate value_label: label covariate value value_annot: annotation covariate value Odds ratio: odds ratio covariate effect 95% CI: 95% credible interval covariate effect","code":""},{"path":"https://genentech.github.io/BayesERtools/reference/print_coveff.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Format the covariate effect simulation results for printing — print_coveff","text":"Note n_sigfig, use_seps, drop_trailing_dec_mark applied odds ratio 95% CI columns; value_label column already generated earlier step build_spec_coveff() sim_coveff().","code":""},{"path":"https://genentech.github.io/BayesERtools/reference/print_coveff.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Format the covariate effect simulation results for printing — print_coveff","text":"","code":"data(d_sim_binom_cov_hgly2)  ermod_bin <- dev_ermod_bin(   data = d_sim_binom_cov_hgly2,   var_resp = \"AEFLAG\",   var_exposure = \"AUCss_1000\",   var_cov = \"BHBA1C_5\", )  print_coveff(sim_coveff(ermod_bin)) #> # A tibble: 6 × 5 #>   var_label  value_label value_annot `Odds ratio` `95% CI`         #>   <chr>      <chr>       <chr>       <chr>        <chr>            #> 1 AUCss_1000 0.868       5th         0.548        \"[0.452, 0.652]\" #> 2 AUCss_1000 2.21        median      1            \" \"              #> 3 AUCss_1000 5.30        95th        3.98         \"[2.67, 6.18]\"   #> 4 BHBA1C_5   5.75        5th         0.276        \"[0.200, 0.372]\" #> 5 BHBA1C_5   7.97        median      1            \" \"              #> 6 BHBA1C_5   10.4        95th        4.20         \"[3.02, 6.00]\""},{"path":"https://genentech.github.io/BayesERtools/reference/run_kfold_cv.html","id":null,"dir":"Reference","previous_headings":"","what":"Run k-fold cross-validation — run_kfold_cv","title":"Run k-fold cross-validation — run_kfold_cv","text":"function performs k-fold cross-validation using appropriate model development function based class ermod object.","code":""},{"path":"https://genentech.github.io/BayesERtools/reference/run_kfold_cv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run k-fold cross-validation — run_kfold_cv","text":"","code":"run_kfold_cv(ermod, newdata = NULL, k = 5, seed = NULL)"},{"path":"https://genentech.github.io/BayesERtools/reference/run_kfold_cv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run k-fold cross-validation — run_kfold_cv","text":"ermod ermod object containing model data. newdata Optional new dataset use instead original data. Default NULL. k number folds cross-validation. Default 5. seed Random seed reproducibility. Default NULL.","code":""},{"path":"https://genentech.github.io/BayesERtools/reference/run_kfold_cv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run k-fold cross-validation — run_kfold_cv","text":"kfold_cv_ermod class object containing fitted models holdout predictions fold.","code":""},{"path":"https://genentech.github.io/BayesERtools/reference/run_kfold_cv.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run k-fold cross-validation — run_kfold_cv","text":"","code":"# \\donttest{ data(d_sim_binom_cov_hgly2)  ermod_bin <- dev_ermod_bin(   data = d_sim_binom_cov_hgly2,   var_resp = \"AEFLAG\",   var_exposure = \"AUCss_1000\",   var_cov = \"BHBA1C_5\",   # Settings to make the example run faster   chains = 2,   iter = 1000 )  cv_results <- run_kfold_cv(ermod_bin, k = 3, seed = 123)  print(cv_results) #>  #> ── k-fold Cross-Validation for ermod object ──────────────────────────────────── #> ℹ Number of folds:  3 #>  #> ── Structure of the object: ── #>  #> • $l_ermod: list of ermod objects #> • $d_truth: data frame with true response values #> • $d_sim: data frame with holdout predictions # }"},{"path":"https://genentech.github.io/BayesERtools/reference/sim_coveff.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform simulation of covariate effects for ER model — sim_coveff","title":"Perform simulation of covariate effects for ER model — sim_coveff","text":"Perform simulation covariate effects ER model","code":""},{"path":"https://genentech.github.io/BayesERtools/reference/sim_coveff.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform simulation of covariate effects for ER model — sim_coveff","text":"","code":"sim_coveff(   ermod,   data = NULL,   spec_coveff = NULL,   output_type = \"median_qi\",   qi_width = 0.9,   qi_width_cov = 0.9 )"},{"path":"https://genentech.github.io/BayesERtools/reference/sim_coveff.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform simulation of covariate effects for ER model — sim_coveff","text":"ermod object class ermod data optional data frame derive covariate values forest plots. NULL (default), data used fit model used. spec_coveff can supply spec_coveff sim_coveff() plot_coveff(), already built manually build_spec_coveff(). See build_spec_coveff() detail. output_type Type output. Currently supports \"median_qi\" returns median quantile interval. qi_width width credible interval covariate effect. translate width error bars forest plot. qi_width_cov width quantile interval continuous covariates forest plot. Default 0.9 (.e. visualize effect covariate effect 5th 95th percentile values).","code":""},{"path":"https://genentech.github.io/BayesERtools/reference/sim_coveff.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform simulation of covariate effects for ER model — sim_coveff","text":"data frame class coveffsim containing median quantile interval covariate effects.","code":""},{"path":"https://genentech.github.io/BayesERtools/reference/sim_coveff.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform simulation of covariate effects for ER model — sim_coveff","text":"","code":"data(d_sim_binom_cov_hgly2)  ermod_bin <- dev_ermod_bin(   data = d_sim_binom_cov_hgly2,   var_resp = \"AEFLAG\",   var_exposure = \"AUCss_1000\",   var_cov = \"BHBA1C_5\", )  sim_coveff(ermod_bin) #> # A tibble: 6 × 12 #>   var_order var_name  var_label value_order value_annot value_label is_ref_value #>       <dbl> <chr>     <chr>           <int> <chr>       <chr>       <lgl>        #> 1         1 AUCss_10… AUCss_10…           1 5th         0.868       FALSE        #> 2         1 AUCss_10… AUCss_10…           2 median      2.21        TRUE         #> 3         1 AUCss_10… AUCss_10…           3 95th        5.30        FALSE        #> 4         2 BHBA1C_5  BHBA1C_5            1 5th         5.75        FALSE        #> 5         2 BHBA1C_5  BHBA1C_5            2 median      7.97        TRUE         #> 6         2 BHBA1C_5  BHBA1C_5            3 95th        10.4        FALSE        #> # ℹ 5 more variables: show_ref_value <lgl>, is_covariate <lgl>, #> #   .odds_ratio <dbl>, .lower <dbl>, .upper <dbl>"},{"path":"https://genentech.github.io/BayesERtools/reference/sim_er.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate from ER model — sim_er","title":"Simulate from ER model — sim_er","text":"Simulate ER model","code":""},{"path":"https://genentech.github.io/BayesERtools/reference/sim_er.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate from ER model — sim_er","text":"","code":"sim_er(   ermod,   newdata = NULL,   n_draws_sim = NULL,   seed_sample_draws = NULL,   output_type = c(\"draws\", \"median_qi\"),   qi_width = 0.95,   .nrow_cov_data = NULL )"},{"path":"https://genentech.github.io/BayesERtools/reference/sim_er.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate from ER model — sim_er","text":"ermod object class ermod newdata New data use simulation. Default NULL (use data model object). n_draws_sim Number draws simulation. NULL (default), draws model object used. seed_sample_draws Seed sampling draws. Default NULL. output_type Type output. \"draws\" returns raw draws simulation, \"median_qi\" returns median quantile interval. qi_width Width quantile interval. Default 0.95. used output_type = \"median_qi\". .nrow_cov_data Number rows covariate data, used internal purposes. Users set argument.","code":""},{"path":"https://genentech.github.io/BayesERtools/reference/sim_er.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate from ER model — sim_er","text":"ersim object, tibble simulated responses additional information object attributes. three types predictions - .linpred, .epred, .prediction. .linpred .epred similar way represent \"expected response\", .e. without residual variability. models continuous endpoits (Emax model). models binary endpoints, .linpred linear predictor (.e. logit scale) .epred probability scale. .prediction predicted response residual variability (case binary endpoint, predicted yes (1) (0) event occurrence). See tidybayes::add_epred_draws() details. case output_type = \"median_qi\", returns ersim_med_qi object.","code":""},{"path":[]},{"path":"https://genentech.github.io/BayesERtools/reference/sim_er.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulate from ER model — sim_er","text":"","code":"# \\donttest{ data(d_sim_binom_cov_hgly2)  ermod_bin <- dev_ermod_bin(   data = d_sim_binom_cov_hgly2,   var_resp = \"AEFLAG\",   var_exposure = \"AUCss_1000\",   var_cov = \"BHBA1C_5\", )  ersim <- sim_er(   ermod_bin,   n_draws_sim = 500, # This is set to make the example run faster   output_type = \"draws\" )  ersim_med_qi <- sim_er(   ermod_bin,   n_draws_sim = 500, # This is set to make the example run faster   output_type = \"median_qi\" )  ersim #> # A tibble: 250,000 × 24 #> # Groups:   ID, AETYPE, AEFLAG, Dose_mg, AUCss, Cmaxss, Cminss, BAGE, BWT, #> #   BGLUC, BHBA1C, RACE, VISC, AUCss_1000, BAGE_10, BWT_10, BHBA1C_5, .row #> #   [500] #>       ID AETYPE AEFLAG Dose_mg AUCss Cmaxss Cminss  BAGE   BWT BGLUC BHBA1C #>    <int> <chr>   <int>   <dbl> <dbl>  <dbl>  <dbl> <dbl> <dbl> <dbl>  <dbl> #>  1     1 hgly2       0     200  866.   64.3   10.1  84.4  74.1  4.65   31.5 #>  2     1 hgly2       0     200  866.   64.3   10.1  84.4  74.1  4.65   31.5 #>  3     1 hgly2       0     200  866.   64.3   10.1  84.4  74.1  4.65   31.5 #>  4     1 hgly2       0     200  866.   64.3   10.1  84.4  74.1  4.65   31.5 #>  5     1 hgly2       0     200  866.   64.3   10.1  84.4  74.1  4.65   31.5 #>  6     1 hgly2       0     200  866.   64.3   10.1  84.4  74.1  4.65   31.5 #>  7     1 hgly2       0     200  866.   64.3   10.1  84.4  74.1  4.65   31.5 #>  8     1 hgly2       0     200  866.   64.3   10.1  84.4  74.1  4.65   31.5 #>  9     1 hgly2       0     200  866.   64.3   10.1  84.4  74.1  4.65   31.5 #> 10     1 hgly2       0     200  866.   64.3   10.1  84.4  74.1  4.65   31.5 #> # ℹ 249,990 more rows #> # ℹ 13 more variables: RACE <chr>, VISC <fct>, AUCss_1000 <dbl>, BAGE_10 <dbl>, #> #   BWT_10 <dbl>, BHBA1C_5 <dbl>, .row <int>, .chain <int>, .iteration <int>, #> #   .draw <int>, .epred <dbl>, .linpred <dbl>, .prediction <int> ersim_med_qi #> # A tibble: 500 × 27 #>       ID AETYPE AEFLAG Dose_mg AUCss Cmaxss Cminss  BAGE   BWT BGLUC BHBA1C #>    <int> <chr>   <int>   <dbl> <dbl>  <dbl>  <dbl> <dbl> <dbl> <dbl>  <dbl> #>  1     1 hgly2       0     200  866.   64.3   10.1  84.4  74.1  4.65   31.5 #>  2     2 hgly2       0     200 1707.  166.    27.3  59.1  88.2  7.24   41.9 #>  3     3 hgly2       0     200  746.   68.2   15.8  64.3  88.0  5.73   47.7 #>  4     4 hgly2       0     200 1984.  287.    37.2  65.5 114.   5.26   23.4 #>  5     5 hgly2       0     200 2045.  275.    53.1  67.5  64.6  4.49   43.1 #>  6     6 hgly2       0     200  632.   47.3   12.0  67.0  73.0  6.41   43.6 #>  7     7 hgly2       0     200 2274.  136.    33.6  73.7  63.6  7.22   35.9 #>  8     8 hgly2       0     200 1347.  130.    21.7  59.9  99.7  5.34   36.2 #>  9     9 hgly2       0     200 1101.   60.7   11.2  65.8  82.3  5.47   36.0 #> 10    10 hgly2       0     200 1822.  179.    49.3  65.5  62.3  5.70   33.7 #> # ℹ 490 more rows #> # ℹ 16 more variables: RACE <chr>, VISC <fct>, AUCss_1000 <dbl>, BAGE_10 <dbl>, #> #   BWT_10 <dbl>, BHBA1C_5 <dbl>, .row <int>, .epred <dbl>, .epred.lower <dbl>, #> #   .epred.upper <dbl>, .linpred <dbl>, .linpred.lower <dbl>, #> #   .linpred.upper <dbl>, .width <dbl>, .point <chr>, .interval <chr> # }"},{"path":"https://genentech.github.io/BayesERtools/reference/sim_er_new_exp.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate from ER model at specified exposure values — sim_er_new_exp","title":"Simulate from ER model at specified exposure values — sim_er_new_exp","text":"Simulate ER model specified exposure values","code":""},{"path":"https://genentech.github.io/BayesERtools/reference/sim_er_new_exp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate from ER model at specified exposure values — sim_er_new_exp","text":"","code":"sim_er_new_exp(   ermod,   exposure_to_sim_vec = NULL,   data_cov = NULL,   n_draws_sim = NULL,   seed_sample_draws = NULL,   output_type = c(\"draws\", \"median_qi\"),   qi_width = 0.95 )  sim_er_curve(   ermod,   exposure_range = NULL,   num_exposures = 51,   data_cov = NULL,   n_draws_sim = NULL,   seed_sample_draws = NULL,   output_type = c(\"draws\", \"median_qi\"),   qi_width = 0.95 )"},{"path":"https://genentech.github.io/BayesERtools/reference/sim_er_new_exp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate from ER model at specified exposure values — sim_er_new_exp","text":"ermod object class ermod exposure_to_sim_vec Vector exposure values simulate. data_cov Data frame containing covariates use simulation, see details . n_draws_sim Number draws simulation. NULL (default), draws model object used. seed_sample_draws Seed sampling draws. Default NULL. output_type Type output. \"draws\" returns raw draws simulation, \"median_qi\" returns median quantile interval. qi_width Width quantile interval. Default 0.95. used output_type = \"median_qi\". exposure_range Range exposure values simulate. NULL (default), set range exposure variable original data model development. num_exposures Number exposure values simulate.","code":""},{"path":"https://genentech.github.io/BayesERtools/reference/sim_er_new_exp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate from ER model at specified exposure values — sim_er_new_exp","text":"ersim object, tibble simulated responses additional information object attributes. three types predictions - .linpred, .epred, .prediction. .linpred .epred similar way represent \"expected response\", .e. without residual variability. models continuous endpoits (Emax model). models binary endpoints, .linpred linear predictor (.e. logit scale) .epred probability scale. .prediction predicted response residual variability (case binary endpoint, predicted yes (1) (0) event occurrence). See tidybayes::add_epred_draws() details. case output_type = \"median_qi\", returns ersim_med_qi object.","code":""},{"path":"https://genentech.github.io/BayesERtools/reference/sim_er_new_exp.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Simulate from ER model at specified exposure values — sim_er_new_exp","text":"Simulation dataset combinations covariates data_cov exposure values exposure_to_sim_vec, run time can become long data_cov many rows. data_cov supplied ermod model covariates. recommended data_cov contains subject identifiers ID post-processing. Exposure values data_cov ignored. sim_er_curve() wrapper function sim_er_new_exp() use range exposure values simulate expected responses. Particularly useful plotting exposure-response curve.","code":""},{"path":[]},{"path":"https://genentech.github.io/BayesERtools/reference/sim_er_new_exp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulate from ER model at specified exposure values — sim_er_new_exp","text":"","code":"data(d_sim_binom_cov_hgly2)  ermod_bin <- dev_ermod_bin(   data = d_sim_binom_cov_hgly2,   var_resp = \"AEFLAG\",   var_exposure = \"AUCss_1000\",   var_cov = \"BHBA1C_5\", )  ersim_new_exp_med_qi <- sim_er_new_exp(   ermod_bin,   exposure_to_sim_vec = seq(2, 6, by = 0.2),   data_cov = dplyr::tibble(BHBA1C_5 = 4:10),   n_draws_sim = 500, # This is set to make the example run faster   output_type = \"median_qi\" )  ersim_new_exp_med_qi #> # A tibble: 147 × 12 #>    AUCss_1000 BHBA1C_5  .row .epred .epred.lower .epred.upper .linpred #>         <dbl>    <int> <int>  <dbl>        <dbl>        <dbl>    <dbl> #>  1        2          4     1 0.0230       0.0110       0.0490   -3.75  #>  2        2          5     2 0.0405       0.0225       0.0748   -3.17  #>  3        2          6     3 0.0714       0.0451       0.113    -2.57  #>  4        2          7     4 0.121        0.0874       0.166    -1.99  #>  5        2          8     5 0.197        0.158        0.247    -1.41  #>  6        2          9     6 0.307        0.253        0.361    -0.814 #>  7        2         10     7 0.445        0.362        0.523    -0.222 #>  8        2.2        4     8 0.0252       0.0121       0.0528   -3.66  #>  9        2.2        5     9 0.0442       0.0251       0.0803   -3.07  #> 10        2.2        6    10 0.0774       0.0493       0.121    -2.48  #> # ℹ 137 more rows #> # ℹ 5 more variables: .linpred.lower <dbl>, .linpred.upper <dbl>, .width <dbl>, #> #   .point <chr>, .interval <chr>"},{"path":"https://genentech.github.io/BayesERtools/reference/sim_er_new_exp_marg.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate marginal expected response for specified exposure values — sim_er_new_exp_marg","title":"Calculate marginal expected response for specified exposure values — sim_er_new_exp_marg","text":"Responses specified exposure values calculated n_subj_sim subjects different covariates (sampled newdata), predicted responses \"marginalized\" (averaged), resulting marginal expected response population interest.","code":""},{"path":"https://genentech.github.io/BayesERtools/reference/sim_er_new_exp_marg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate marginal expected response for specified exposure values — sim_er_new_exp_marg","text":"","code":"sim_er_new_exp_marg(   ermod,   exposure_to_sim_vec = NULL,   data_cov = extract_data(ermod),   n_subj_sim = 100,   n_draws_sim = 500,   seed_sample_draws = NULL,   output_type = c(\"draws\", \"median_qi\"),   qi_width = 0.95 )  sim_er_curve_marg(   ermod,   exposure_range = NULL,   num_exposures = 51,   data_cov = extract_data(ermod),   n_subj_sim = 100,   n_draws_sim = 500,   seed_sample_draws = NULL,   output_type = c(\"draws\", \"median_qi\"),   qi_width = 0.95 )"},{"path":"https://genentech.github.io/BayesERtools/reference/sim_er_new_exp_marg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate marginal expected response for specified exposure values — sim_er_new_exp_marg","text":"ermod object class ermod exposure_to_sim_vec Vector exposure values simulate. data_cov Data frame containing covariates use simulation. Different sim_er_new_exp(), data_cov can large long n_subj_sim set reasonable number. Default set extract_data(ermod) full data used fit model. n_subj_sim Maximum number subjects simulate. Default 100 sufficient many cases, used marginal response calculation. Set NULL use subjects data_cov without resampling; case, mindful computation time. n_draws_sim Number draws simulation. Default set 500 reduce computation time marginal response calculation. seed_sample_draws Seed sampling draws. Default NULL. output_type Type output. \"draws\" returns raw draws simulation, \"median_qi\" returns median quantile interval. qi_width Width quantile interval. Default 0.95. used output_type = \"median_qi\". exposure_range Range exposure values simulate. NULL (default), set range exposure variable original data model development. num_exposures Number exposure values simulate.","code":""},{"path":"https://genentech.github.io/BayesERtools/reference/sim_er_new_exp_marg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate marginal expected response for specified exposure values — sim_er_new_exp_marg","text":"ersim_marg object, tibble simulated marginal expected response additional information object attributes. case output_type = \"median_qi\", returns ersim_marg_med_qi object.","code":""},{"path":"https://genentech.github.io/BayesERtools/reference/sim_er_new_exp_marg.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate marginal expected response for specified exposure values — sim_er_new_exp_marg","text":"sim_er_new_exp_marg() returns tibble marginal expected response exposure value exposure_to_sim_vec. sim_er_curve_marg() wrapper function sim_er_new_exp_marg() use range exposure values simulate marginal expected responses. Particularly useful plotting exposure-response curve.","code":""},{"path":[]},{"path":"https://genentech.github.io/BayesERtools/reference/sim_er_new_exp_marg.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate marginal expected response for specified exposure values — sim_er_new_exp_marg","text":"","code":"data(d_sim_binom_cov_hgly2)  ermod_bin <- dev_ermod_bin(   data = d_sim_binom_cov_hgly2,   var_resp = \"AEFLAG\",   var_exposure = \"AUCss_1000\",   var_cov = \"BHBA1C_5\", )  ersim_new_exp_marg_med_qi <- sim_er_new_exp_marg(   ermod_bin,   exposure_to_sim_vec = seq(2, 6, by = 0.2),   data_cov = dplyr::tibble(BHBA1C_5 = 4:10),   n_subj_sim = NULL,   n_draws_sim = 500, # This is set to make the example run faster   output_type = \"median_qi\" )  ersim_new_exp_marg_med_qi #> # A tibble: 21 × 14 #>    .id_exposure AUCss_1000 .epred .epred.lower .epred.upper .linpred #>           <int>      <dbl>  <dbl>        <dbl>        <dbl>    <dbl> #>  1            1        2    0.174        0.146        0.205    -1.96 #>  2            2        2.2  0.185        0.157        0.215    -1.87 #>  3            3        2.4  0.197        0.167        0.227    -1.78 #>  4            4        2.6  0.208        0.179        0.239    -1.71 #>  5            5        2.8  0.221        0.191        0.253    -1.61 #>  6            6        3    0.234        0.203        0.267    -1.52 #>  7            7        3.2  0.247        0.215        0.285    -1.43 #>  8            8        3.4  0.260        0.225        0.302    -1.34 #>  9            9        3.6  0.274        0.233        0.318    -1.25 #> 10           10        3.8  0.289        0.244        0.337    -1.17 #> # ℹ 11 more rows #> # ℹ 8 more variables: .linpred.lower <dbl>, .linpred.upper <dbl>, #> #   .prediction <dbl>, .prediction.lower <dbl>, .prediction.upper <dbl>, #> #   .width <dbl>, .point <chr>, .interval <chr>"},{"path":"https://genentech.github.io/BayesERtools/news/index.html","id":"bayesertools-020","dir":"Changelog","previous_headings":"","what":"BayesERtools 0.2.0","title":"BayesERtools 0.2.0","text":"Initial public release","code":""}]
